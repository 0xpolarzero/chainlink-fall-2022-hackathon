type = "directrequest"
schemaVersion = 1
name = "TWITTER-EA"
maxTaskDuration = "0s"
contractAddress = "0x2BB8Dd9C16edeF313eb9ccBd5F42A8b577cB1E3c"
minIncomingConfirmations = 0
observationSource = """
    decode_log      [type="ethabidecodelog"
                        abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                        data="$(jobRun.logData)"
                        topics="$(jobRun.logTopics)"]

    decode_cbor     [type="cborparse" data="$(decode_log.data)"]
    fetch           [type="bridge" name="twitter" requestData="{\\"id\\": $(jobSpec.externalJobID), \\"data\\": { \\"username\\": $(decode_cbor.username), \\"signature\\": $(decode_cbor.signature), \\"address\\": $(decode_cbor.address)}}"]
    parseResult     [type="jsonparse" path="data,result" data="$(fetch)"]
    parseUsername   [type="jsonparse" path="data,username" data="$(fetch)"]
    parseAddress    [type="jsonparse" path="data,address" data="$(fetch)"]

    encode_data     [type="ethabiencode" abi="(bytes32 _requestId, string _username, bool _verified, address _userAddress)"
                        data="{\\"_requestId\\": $(decode_log.requestId),\\"_username\\": $(parseUsername), \\"_verified\\": $(parseResult),\\"_userAddress\\": $(parseAddress)}"]

    encode_tx       [type="ethabiencode"
                        abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                        data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"]

    submit_tx [type="ethtx" to="0x2BB8Dd9C16edeF313eb9ccBd5F42A8b577cB1E3c" data="$(encode_tx)"]

    decode_log -> decode_cbor -> fetch -> parseResult -> parseUsername -> parseAddress -> encode_data -> encode_tx -> submit_tx
"""
