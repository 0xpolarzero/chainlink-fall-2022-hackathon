{
  "address": "0x1007B2dA7e8a513D4dC8325eCc0189a0D68BEF87",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__NOT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__NOT_VERIFIER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__DUPLICATE_FIELD",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__EMPTY_FIELD",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__INVALID_URI",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_promiseName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_pdfUri",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_partyNames",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_partyTwitterHandles",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_partyAddresses",
          "type": "address[]"
        }
      ],
      "name": "PromiseContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitterHandle",
          "type": "string"
        }
      ],
      "name": "TwitterAddVerifiedFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitterHandle",
          "type": "string"
        }
      ],
      "name": "TwitterAddVerifiedSuccessful",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_twitterHandle",
          "type": "string"
        }
      ],
      "name": "addTwitterVerifiedUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_promiseName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pdfUri",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_partyNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_partyTwitterHandles",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_partyAddresses",
          "type": "address[]"
        }
      ],
      "name": "createPromiseContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "promiseContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getPromiseContractAddresses",
      "outputs": [
        {
          "internalType": "contract PromiseContract[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getPromiseContractCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getTwitterVerifiedHandle",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVerifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "setVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4f8c94fc38f7ca8f4cdf129f156c6f88d135d64045c3df518be04efe5aa7b58b",
  "receipt": {
    "to": null,
    "from": "0xc06d127E504a944f63Bc750D8F512556c576F3EF",
    "contractAddress": "0x1007B2dA7e8a513D4dC8325eCc0189a0D68BEF87",
    "transactionIndex": 14,
    "gasUsed": "3906296",
    "logsBloom": "0x
    "blockHash": "0xe4471354c72d4a47f19514d7c9ddf7597ed2036cd9cf8ae17f95e723ac96b5e3",
    "transactionHash": "0x4f8c94fc38f7ca8f4cdf129f156c6f88d135d64045c3df518be04efe5aa7b58b",
    "logs": [
      {
        "transactionIndex": 14,
        "blockNumber": 28946233,
        "transactionHash": "0x4f8c94fc38f7ca8f4cdf129f156c6f88d135d64045c3df518be04efe5aa7b58b",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c06d127e504a944f63bc750d8f512556c576f3ef",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000014d1221e338800000000000000000000000000000000000000000000000000157fdc8a7327e7bd0000000000000000000000000000000000000000000000002e2aca61374924f7000000000000000000000000000000000000000000000000156b0b6854f45fbd0000000000000000000000000000000000000000000000002e3f9b83557cacf7",
        "logIndex": 47,
        "blockHash": "0xe4471354c72d4a47f19514d7c9ddf7597ed2036cd9cf8ae17f95e723ac96b5e3"
      }
    ],
    "blockNumber": 28946233,
    "cumulativeGasUsed": "9699103",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf58A128C2052BaBb194C244e90395Ba3FDaae74f"
  ],
  "numDeployments": 5,
  "solcInputHash": "788a2fca5be6abd716e3c43e37d02631",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PromiseFactory__NOT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__NOT_VERIFIER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__DUPLICATE_FIELD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__EMPTY_FIELD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__INVALID_URI\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_promiseName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_pdfUri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_partyNames\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_partyTwitterHandles\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_partyAddresses\",\"type\":\"address[]\"}],\"name\":\"PromiseContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitterHandle\",\"type\":\"string\"}],\"name\":\"TwitterAddVerifiedFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitterHandle\",\"type\":\"string\"}],\"name\":\"TwitterAddVerifiedSuccessful\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_twitterHandle\",\"type\":\"string\"}],\"name\":\"addTwitterVerifiedUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_promiseName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pdfUri\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_partyNames\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_partyTwitterHandles\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_partyAddresses\",\"type\":\"address[]\"}],\"name\":\"createPromiseContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"promiseContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getPromiseContractAddresses\",\"outputs\":[{\"internalType\":\"contract PromiseContract[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getPromiseContractCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getTwitterVerifiedHandle\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"polarzero\",\"kind\":\"dev\",\"methods\":{\"addTwitterVerifiedUser(address,string)\":{\"details\":\"Only the verifier contract can call this function, after the account has been verified with the Chainlink Node + External Adapter\",\"params\":{\"_twitterHandle\":\"The Twitter handle of the verified account\",\"_userAddress\":\"The address of the user\"}},\"createPromiseContract(string,string,string[],string[],address[])\":{\"params\":{\"_partyAddresses\":\"The addresses specified by the user that will be allowed to interact with the contract\",\"_partyNames\":\"The names of the parties specified by the user\",\"_partyTwitterHandles\":\"The Twitter handles of the parties specified by the user\",\"_pdfUri\":\"The URI of the PDF file stored on IPFS\",\"_promiseName\":\"The name of the contract specified by the user\"}}},\"title\":\"Master Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"PromiseFactory__createPromiseContract__EMPTY_FIELD()\":[{\"notice\":\"Errors\"}]},\"events\":{\"PromiseContractCreated(address,address,string,string,string[],string[],address[])\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"addTwitterVerifiedUser(address,string)\":{\"notice\":\"Add a verified Twitter account to the list of verified accounts\"},\"constructor\":{\"notice\":\"Initialize the contract\"},\"createPromiseContract(string,string,string[],string[],address[])\":{\"notice\":\"Create a new contract and add it to the list of child contracts\"},\"getPromiseContractAddresses(address)\":{\"notice\":\"Getters\"},\"setVerifier(address)\":{\"notice\":\"Setters\"}},\"notice\":\"This is the master contract initializing & referencing all child contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PromiseFactory.sol\":\"PromiseFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PromiseContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\n/**\\n * @author polarzero\\n * @title Promise Contract\\n * @notice This is the child contract generated by the Promise Factory\\n * once a user creates a new promise\\n */\\n\\ncontract PromiseContract {\\n    /// Errors\\n    error PromiseContract__NOT_PARTICIPANT();\\n    error PromiseContract__PROMISE_LOCKED();\\n    error PromiseContract__approvePromise__ALREADY_APPROVED();\\n    error PromiseContract__lockPromise__PARTICIPANT_NOT_APPROVED();\\n\\n    /// Types\\n    struct Participant {\\n        string participantName;\\n        string participantTwitterHandle;\\n        address participantAddress;\\n    }\\n\\n    /// Variables\\n    uint256 public s_participantCount;\\n    string public s_promiseName;\\n    string public s_pdfUri;\\n    address public immutable i_owner;\\n    address[] public s_participantAddresses;\\n    bool public s_promiseLocked = false;\\n\\n    // Mapping of addresses to name & twitter handle\\n    mapping(address => Participant) public s_parties;\\n    // Mapping of addresses to whether or not they have approved the agreement\\n    mapping(address => bool) public s_approvedParties;\\n\\n    /// Events\\n    event ParticipantCreated(\\n        string participantName,\\n        string participantTwitterHandle,\\n        address indexed participantAddress\\n    );\\n\\n    event ParticipantApproved(\\n        string participantName,\\n        string participantTwitterHandle,\\n        address indexed participantAddress\\n    );\\n\\n    event PromiseLocked();\\n\\n    /// Modifiers\\n    modifier onlyParticipant() {\\n        address[] memory participantAddresses = s_participantAddresses;\\n        bool isParticipant = false;\\n\\n        // The owner will probably interact more with the contract\\n        // So we can save some gas by checking it first\\n        if (i_owner == msg.sender) {\\n            isParticipant = true;\\n        } else {\\n            // Loop through the parties and check if the sender is a party\\n            for (uint256 i = 0; i < s_participantCount; i++) {\\n                if (participantAddresses[i] == msg.sender) {\\n                    isParticipant = true;\\n                    break;\\n                }\\n            }\\n        }\\n\\n        if (!isParticipant) revert PromiseContract__NOT_PARTICIPANT();\\n        _;\\n    }\\n\\n    modifier onlyUnlocked() {\\n        if (s_promiseLocked) revert PromiseContract__PROMISE_LOCKED();\\n        _;\\n    }\\n\\n    /// Functions\\n    /**\\n     * @dev Initialize the contract from the Master Contract with the user address as the owner\\n     */\\n\\n    constructor(\\n        address _owner,\\n        string memory _promiseName,\\n        string memory _pdfUri,\\n        string[] memory _partyNames,\\n        string[] memory _partyTwitterHandles,\\n        address[] memory _partyAddresses\\n    ) {\\n        i_owner = _owner;\\n        s_promiseName = _promiseName;\\n        s_pdfUri = _pdfUri;\\n        s_participantCount = _partyAddresses.length;\\n\\n        for (uint256 i = 0; i < _partyAddresses.length; i++) {\\n            _createParticipant(\\n                _partyNames[i],\\n                _partyTwitterHandles[i],\\n                _partyAddresses[i]\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Approve the promise as a participant\\n     */\\n\\n    function approvePromise() public onlyParticipant onlyUnlocked {\\n        if (s_approvedParties[msg.sender] == true) {\\n            revert PromiseContract__approvePromise__ALREADY_APPROVED();\\n        }\\n\\n        s_approvedParties[msg.sender] = true;\\n        emit ParticipantApproved(\\n            s_parties[msg.sender].participantName,\\n            s_parties[msg.sender].participantTwitterHandle,\\n            msg.sender\\n        );\\n    }\\n\\n    /**\\n     * @notice Validate the promise and lock it so that no more participants can change any state\\n     * or even try to and lose gas\\n     */\\n\\n    function lockPromise() public onlyParticipant onlyUnlocked {\\n        address[] memory participantAddresses = s_participantAddresses;\\n\\n        // Loop through the parties and check if anyone has not approved yet\\n        for (uint256 i = 0; i < s_participantCount; i++) {\\n            if (s_approvedParties[participantAddresses[i]] == false) {\\n                revert PromiseContract__lockPromise__PARTICIPANT_NOT_APPROVED();\\n            }\\n        }\\n\\n        s_promiseLocked = true;\\n        emit PromiseLocked();\\n    }\\n\\n    /**\\n     * @notice Create a new participant and add them to the mapping\\n     * @dev This function can only be called during the contract creation\\n     * @param _participantName The name of the participant\\n     * @param _participantTwitterHandle The twitter handle of the participant\\n     * @param _participantAddress The address of the participant\\n     */\\n\\n    function _createParticipant(\\n        string memory _participantName,\\n        string memory _participantTwitterHandle,\\n        address _participantAddress\\n    ) private {\\n        Participant memory participant = Participant(\\n            _participantName,\\n            _participantTwitterHandle,\\n            _participantAddress\\n        );\\n        s_parties[_participantAddress] = participant;\\n        s_participantAddresses.push(_participantAddress);\\n\\n        emit ParticipantCreated(\\n            _participantName,\\n            _participantTwitterHandle,\\n            _participantAddress\\n        );\\n    }\\n\\n    /// Getters\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getName() public view returns (string memory) {\\n        return s_promiseName;\\n    }\\n\\n    function getPdfUri() public view returns (string memory) {\\n        return s_pdfUri;\\n    }\\n\\n    function getParticipant(address _participantAddress)\\n        public\\n        view\\n        returns (Participant memory)\\n    {\\n        if (s_parties[_participantAddress].participantAddress == address(0)) {\\n            revert PromiseContract__NOT_PARTICIPANT();\\n        }\\n\\n        return s_parties[_participantAddress];\\n    }\\n\\n    function getParticipantCount() public view returns (uint256) {\\n        return s_participantCount;\\n    }\\n\\n    function getParticipantAddresses() public view returns (address[] memory) {\\n        return s_participantAddresses;\\n    }\\n\\n    function getIsPromiseApproved(address _participantAddress)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        return s_approvedParties[_participantAddress];\\n    }\\n\\n    function getIsPromiseLocked() public view returns (bool) {\\n        return s_promiseLocked;\\n    }\\n}\\n\",\"keccak256\":\"0x6652bdbeb77cb8ea0df2bb45fbaa0fb31d195cd0e839e6693748d8561b7db6d1\",\"license\":\"MIT\"},\"contracts/PromiseFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\nimport \\\"./PromiseContract.sol\\\";\\n\\n/**\\n * @author polarzero\\n * @title Master Contract\\n * @notice This is the master contract initializing & referencing all child contracts\\n */\\n\\ncontract PromiseFactory {\\n    /// Errors\\n    error PromiseFactory__createPromiseContract__EMPTY_FIELD();\\n    error PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH();\\n    error PromiseFactory__createPromiseContract__DUPLICATE_FIELD();\\n    error PromiseFactory__createPromiseContract__INVALID_URI();\\n    // error PromiseFactory__addTwitterVerifiedUser__ALREADY_VERIFIED();\\n    error PromiseFactory__NOT_OWNER();\\n    error PromiseFactory__NOT_VERIFIER();\\n\\n    /// Variables\\n    address private immutable i_owner;\\n    // The VerifyTwitter contract\\n    address private s_verifier;\\n\\n    // Map the owner addresses to the child contracts they created\\n    mapping(address => PromiseContract[]) private s_promiseContracts;\\n\\n    // Map the user addresses to their verified Twitter account(s)\\n    mapping(address => string[]) private s_twitterVerifiedUsers;\\n\\n    /// Events\\n    event PromiseContractCreated(\\n        address indexed _owner,\\n        address indexed _contractAddress,\\n        string _promiseName,\\n        string _pdfUri,\\n        string[] _partyNames,\\n        string[] _partyTwitterHandles,\\n        address[] _partyAddresses\\n    );\\n\\n    event TwitterAddVerifiedSuccessful(\\n        address indexed _owner,\\n        string _twitterHandle\\n    );\\n\\n    event TwitterAddVerifiedFailed(\\n        address indexed _owner,\\n        string _twitterHandle\\n    );\\n\\n    /// Modifiers\\n    modifier onlyOwner() {\\n        // msg sender should be the deployer of the contract\\n        if (msg.sender != i_owner) {\\n            revert PromiseFactory__NOT_OWNER();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyVerifier() {\\n        if (msg.sender != s_verifier) {\\n            revert PromiseFactory__NOT_VERIFIER();\\n        }\\n        _;\\n    }\\n\\n    /// Functions\\n\\n    /**\\n     * @notice Initialize the contract\\n     */\\n\\n    constructor(address _verifier) {\\n        i_owner = msg.sender;\\n        s_verifier = _verifier;\\n    }\\n\\n    /**\\n     * @notice Create a new contract and add it to the list of child contracts\\n     * @param _promiseName The name of the contract specified by the user\\n     * @param _pdfUri The URI of the PDF file stored on IPFS\\n     * @param _partyNames The names of the parties specified by the user\\n     * @param _partyTwitterHandles The Twitter handles of the parties specified by the user\\n     * @param _partyAddresses The addresses specified by the user that will be allowed to interact\\n     * with the contract\\n     */\\n\\n    function createPromiseContract(\\n        string memory _promiseName,\\n        string memory _pdfUri,\\n        string[] memory _partyNames,\\n        string[] memory _partyTwitterHandles,\\n        address[] memory _partyAddresses\\n    ) public returns (address promiseContractAddress) {\\n        // Revert if one of the fields is empty\\n        if (\\n            !(bytes(_promiseName).length > 0 &&\\n                bytes(_pdfUri).length > 0 &&\\n                _partyNames.length > 0 &&\\n                _partyAddresses.length > 0)\\n        ) revert PromiseFactory__createPromiseContract__EMPTY_FIELD();\\n\\n        // Revert if the number of names, Twitter and addresses are not equal\\n        // If Twitter handles are not provided, it will pass an empty string\\n        if (\\n            !(_partyAddresses.length == _partyTwitterHandles.length &&\\n                _partyAddresses.length == _partyNames.length)\\n        )\\n            revert PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH();\\n\\n        // Revert if the same address or twitter handle is used twice\\n        for (uint256 i = 0; i < _partyAddresses.length; i++) {\\n            for (uint256 j = i + 1; j < _partyAddresses.length; j++) {\\n                if (\\n                    _partyAddresses[i] == _partyAddresses[j] ||\\n                    keccak256(abi.encodePacked(_partyTwitterHandles[i])) ==\\n                    keccak256(abi.encodePacked(_partyTwitterHandles[j]))\\n                )\\n                    revert PromiseFactory__createPromiseContract__DUPLICATE_FIELD();\\n            }\\n        }\\n\\n        // We could test the validity of the Twitter handles here, but it would not really matter\\n        // since it won't have any value without being verified, and the verification already\\n        // needs it to be valid\\n\\n        // Revert if the name of the promise is longer than 70 characters\\n        if (bytes(_promiseName).length > 70) {\\n            revert PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH();\\n        }\\n\\n        // Check if the provided URI is a valid IPFS URI\\n        bytes memory pdfUriBytes = bytes(_pdfUri);\\n\\n        // Minimum 5 bytes encoded in Base58 -> minimum 7 characters\\n        if (!(pdfUriBytes.length > 6))\\n            revert PromiseFactory__createPromiseContract__INVALID_URI();\\n\\n        // It should match the allowed characters in Base58\\n        for (uint i = 0; i < pdfUriBytes.length; i++) {\\n            if (\\n                !(0x7ffeffe07ff7dfe03fe000000000000 &\\n                    (uint(1) << uint8(pdfUriBytes[i])) >\\n                    0)\\n            ) {\\n                revert PromiseFactory__createPromiseContract__INVALID_URI();\\n            }\\n        }\\n\\n        // Create a new contract for this promise\\n        PromiseContract promiseContract = new PromiseContract(\\n            msg.sender,\\n            _promiseName,\\n            _pdfUri,\\n            _partyNames,\\n            _partyTwitterHandles,\\n            _partyAddresses\\n        );\\n        s_promiseContracts[msg.sender].push(promiseContract);\\n\\n        emit PromiseContractCreated(\\n            msg.sender,\\n            address(promiseContract),\\n            _promiseName,\\n            _pdfUri,\\n            _partyNames,\\n            _partyTwitterHandles,\\n            _partyAddresses\\n        );\\n\\n        return address(promiseContract);\\n    }\\n\\n    /**\\n     * @notice Add a verified Twitter account to the list of verified accounts\\n     * @dev Only the verifier contract can call this function, after the account\\n     * has been verified with the Chainlink Node + External Adapter\\n     * @param _userAddress The address of the user\\n     * @param _twitterHandle The Twitter handle of the verified account\\n     */\\n\\n    function addTwitterVerifiedUser(\\n        address _userAddress,\\n        string memory _twitterHandle\\n    ) external onlyVerifier {\\n        // If the user address doesn't have a verified account yet, create a new array\\n        if (s_twitterVerifiedUsers[_userAddress].length == 0) {\\n            s_twitterVerifiedUsers[_userAddress] = new string[](1);\\n            // Add the verified account to the array\\n            s_twitterVerifiedUsers[_userAddress][0] = _twitterHandle;\\n        } else if (s_twitterVerifiedUsers[_userAddress].length > 0) {\\n            string[] memory verifiedAccounts = s_twitterVerifiedUsers[\\n                _userAddress\\n            ];\\n            for (uint256 i = 0; i < verifiedAccounts.length; i++) {\\n                // If the user already verified this account, revert\\n                if (\\n                    keccak256(abi.encodePacked(verifiedAccounts[i])) ==\\n                    keccak256(abi.encodePacked(_twitterHandle))\\n                ) {\\n                    emit TwitterAddVerifiedFailed(_userAddress, _twitterHandle);\\n                    return;\\n                }\\n            }\\n            // But if it is not included, add it\\n            s_twitterVerifiedUsers[_userAddress].push(_twitterHandle);\\n            emit TwitterAddVerifiedSuccessful(_userAddress, _twitterHandle);\\n        }\\n    }\\n\\n    /// Setters\\n    function setVerifier(address _verifier) external onlyOwner {\\n        s_verifier = _verifier;\\n    }\\n\\n    /// Getters\\n    function getPromiseContractAddresses(address _owner)\\n        public\\n        view\\n        returns (PromiseContract[] memory)\\n    {\\n        return s_promiseContracts[_owner];\\n    }\\n\\n    function getPromiseContractCount(address _userAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_promiseContracts[_userAddress].length;\\n    }\\n\\n    function getTwitterVerifiedHandle(address _userAddress)\\n        public\\n        view\\n        returns (string[] memory)\\n    {\\n        // Return the username if the user has a verified account\\n        if (s_twitterVerifiedUsers[_userAddress].length > 0) {\\n            return s_twitterVerifiedUsers[_userAddress];\\n        } else {\\n            // Return an empty array\\n            string[] memory usernames = new string[](0);\\n            return usernames;\\n        }\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getVerifier() public view returns (address) {\\n        return s_verifier;\\n    }\\n}\\n\",\"keccak256\":\"0x45fa3d84cfdb19cba926bf6c1ab95aafd324a8eb18faf4a3e2c7e45f1d2fb4fe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000945760003560e01c8063893d20e81162000063578063893d20e81462000147578063d210fee31462000169578063d488f9a0146200019f578063e31db57314620001d55762000094565b806346657fe914620000995780634784336f14620000bb5780635437988d14620000f1578063866050621462000111575b600080fd5b620000a3620001f5565b604051620000b291906200110b565b60405180910390f35b620000d96004803603810190620000d391906200116d565b6200021e565b604051620000e89190620011ba565b60405180910390f35b6200010f60048036038101906200010991906200116d565b6200026a565b005b6200012f60048036038101906200012991906200150b565b62000333565b6040516200013e91906200110b565b60405180910390f35b62000151620007f0565b6040516200016091906200110b565b60405180910390f35b6200018760048036038101906200018191906200116d565b62000818565b60405162000196919062001756565b60405180910390f35b620001bd6004803603810190620001b791906200116d565b620008e7565b604051620001cc9190620018d3565b60405180910390f35b620001f36004803603810190620001ed9190620018f7565b62000ab7565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620002f0576040517fadf438e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080865111801562000347575060008551115b801562000355575060008451115b801562000363575060008251115b6200039a576040517fb0bac3b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518251148015620003ad575083518251145b620003e4576040517f21938d4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015620005725760006001826200040291906200198c565b90505b83518110156200055b57838181518110620004255762000424620019c7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16848381518110620004595762000458620019c7565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614806200050d5750848181518110620004955762000494620019c7565b5b6020026020010151604051602001620004af919062001a38565b60405160208183030381529060405280519060200120858381518110620004db57620004da620019c7565b5b6020026020010151604051602001620004f5919062001a38565b60405160208183030381529060405280519060200120145b1562000545576040517f301cd94e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080620005529062001a51565b91505062000405565b508080620005699062001a51565b915050620003e7565b50604686511115620005b0576040517f21938d4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008590506006815111620005f1576040517f7f916f4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81518110156200068b576000828281518110620006165762000615620019c7565b5b602001015160f81c60f81b60f81c60ff166001901b6f07ffeffe07ff7dfe03fe000000000000161162000675576040517f7f916f4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080620006829062001a51565b915050620005f4565b506000338888888888604051620006a29062000fcb565b620006b39695949392919062001bad565b604051809103906000f080158015620006d0573d6000803e3d6000fd5b509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7218ecb1d60a4ca32226db62922bd3917372e8801cddba0cc86fffd285ff74428a8a8a8a8a604051620007da95949392919062001c3d565b60405180910390a3809250505095945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620008db57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000890575b50505050509050919050565b60606000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050111562000a5657600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101562000a4a578382906000526020600020018054620009b69062001cec565b80601f0160208091040260200160405190810160405280929190818152602001828054620009e49062001cec565b801562000a355780601f1062000a095761010080835404028352916020019162000a35565b820191906000526020600020905b81548152906001019060200180831162000a1757829003601f168201915b50505050508152602001906001019062000994565b50505050905062000ab2565b60008067ffffffffffffffff81111562000a755762000a74620011f2565b5b60405190808252806020026020018201604052801562000aaa57816020015b606081526020019060019003908162000a945790505b509050809150505b919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000b3c576040517e11415300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500362000ca557600167ffffffffffffffff81111562000ba55762000ba4620011f2565b5b60405190808252806020026020018201604052801562000bda57816020015b606081526020019060019003908162000bc45790505b50600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019062000c2f92919062000fd9565b5080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154811062000c865762000c85620019c7565b5b90600052602060002001908162000c9e919062001ee9565b5062000fc6565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050111562000fc5576000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101562000e0857838290600052602060002001805462000d749062001cec565b80601f016020809104026020016040519081016040528092919081815260200182805462000da29062001cec565b801562000df35780601f1062000dc75761010080835404028352916020019162000df3565b820191906000526020600020905b81548152906001019060200180831162000dd557829003601f168201915b50505050508152602001906001019062000d52565b50505050905060005b815181101562000efe578260405160200162000e2e919062001a38565b6040516020818303038152906040528051906020012082828151811062000e5a5762000e59620019c7565b5b602002602001015160405160200162000e74919062001a38565b604051602081830303815290604052805190602001200362000ee8578373ffffffffffffffffffffffffffffffffffffffff167f805acb17edee217f5128327239971ea045c5e3d394dfed02278df9d8795f2cfe8460405162000ed8919062001fd0565b60405180910390a2505062000fc7565b808062000ef59062001a51565b91505062000e11565b50600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150908162000f72919062001ee9565b508273ffffffffffffffffffffffffffffffffffffffff167fb84b5dc40da8cd280dee1aaf74b3abbd449725a972daf3ad8cbc9d0adc089eff8360405162000fbb919062001fd0565b60405180910390a2505b5b5b5050565b6125668062001ff583390190565b82805482825590600052602060002090810192821562001026579160200282015b828111156200102557825182908162001014919062001ee9565b509160200191906001019062000ffa565b5b50905062001035919062001039565b5090565b5b808211156200105d576000818162001053919062001061565b506001016200103a565b5090565b5080546200106f9062001cec565b6000825580601f10620010835750620010a4565b601f016020900490600052602060002090810190620010a39190620010a7565b5b50565b5b80821115620010c2576000816000905550600101620010a8565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620010f382620010c6565b9050919050565b6200110581620010e6565b82525050565b6000602082019050620011226000830184620010fa565b92915050565b6000604051905090565b600080fd5b600080fd5b6200114781620010e6565b81146200115357600080fd5b50565b60008135905062001167816200113c565b92915050565b60006020828403121562001186576200118562001132565b5b6000620011968482850162001156565b91505092915050565b6000819050919050565b620011b4816200119f565b82525050565b6000602082019050620011d16000830184620011a9565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200122c82620011e1565b810181811067ffffffffffffffff821117156200124e576200124d620011f2565b5b80604052505050565b60006200126362001128565b905062001271828262001221565b919050565b600067ffffffffffffffff821115620012945762001293620011f2565b5b6200129f82620011e1565b9050602081019050919050565b82818337600083830152505050565b6000620012d2620012cc8462001276565b62001257565b905082815260208101848484011115620012f157620012f0620011dc565b5b620012fe848285620012ac565b509392505050565b600082601f8301126200131e576200131d620011d7565b5b813562001330848260208601620012bb565b91505092915050565b600067ffffffffffffffff821115620013575762001356620011f2565b5b602082029050602081019050919050565b600080fd5b6000620013846200137e8462001339565b62001257565b90508083825260208201905060208402830185811115620013aa57620013a962001368565b5b835b81811015620013f857803567ffffffffffffffff811115620013d357620013d2620011d7565b5b808601620013e2898262001306565b85526020850194505050602081019050620013ac565b5050509392505050565b600082601f8301126200141a5762001419620011d7565b5b81356200142c8482602086016200136d565b91505092915050565b600067ffffffffffffffff821115620014535762001452620011f2565b5b602082029050602081019050919050565b60006200147b620014758462001435565b62001257565b90508083825260208201905060208402830185811115620014a157620014a062001368565b5b835b81811015620014ce5780620014b9888262001156565b845260208401935050602081019050620014a3565b5050509392505050565b600082601f830112620014f057620014ef620011d7565b5b81356200150284826020860162001464565b91505092915050565b600080600080600060a086880312156200152a576200152962001132565b5b600086013567ffffffffffffffff8111156200154b576200154a62001137565b5b620015598882890162001306565b955050602086013567ffffffffffffffff8111156200157d576200157c62001137565b5b6200158b8882890162001306565b945050604086013567ffffffffffffffff811115620015af57620015ae62001137565b5b620015bd8882890162001402565b935050606086013567ffffffffffffffff811115620015e157620015e062001137565b5b620015ef8882890162001402565b925050608086013567ffffffffffffffff81111562001613576200161262001137565b5b6200162188828901620014d8565b9150509295509295909350565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6000620016856200167f6200167984620010c6565b6200165a565b620010c6565b9050919050565b6000620016998262001664565b9050919050565b6000620016ad826200168c565b9050919050565b620016bf81620016a0565b82525050565b6000620016d38383620016b4565b60208301905092915050565b6000602082019050919050565b6000620016f9826200162e565b62001705818562001639565b935062001712836200164a565b8060005b83811015620017495781516200172d8882620016c5565b97506200173a83620016df565b92505060018101905062001716565b5085935050505092915050565b60006020820190508181036000830152620017728184620016ec565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620017e2578082015181840152602081019050620017c5565b60008484015250505050565b6000620017fb82620017a6565b620018078185620017b1565b935062001819818560208601620017c2565b6200182481620011e1565b840191505092915050565b60006200183d8383620017ee565b905092915050565b6000602082019050919050565b60006200185f826200177a565b6200186b818562001785565b9350836020820285016200187f8562001796565b8060005b85811015620018c157848403895281516200189f85826200182f565b9450620018ac8362001845565b925060208a0199505060018101905062001883565b50829750879550505050505092915050565b60006020820190508181036000830152620018ef818462001852565b905092915050565b6000806040838503121562001911576200191062001132565b5b6000620019218582860162001156565b925050602083013567ffffffffffffffff81111562001945576200194462001137565b5b620019538582860162001306565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062001999826200119f565b9150620019a6836200119f565b9250828201905080821115620019c157620019c06200195d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b600062001a0e82620017a6565b62001a1a8185620019f6565b935062001a2c818560208601620017c2565b80840191505092915050565b600062001a46828462001a01565b915081905092915050565b600062001a5e826200119f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001a935762001a926200195d565b5b600182019050919050565b600082825260208201905092915050565b600062001abc82620017a6565b62001ac8818562001a9e565b935062001ada818560208601620017c2565b62001ae581620011e1565b840191505092915050565b600081519050919050565b6000819050602082019050919050565b62001b1681620010e6565b82525050565b600062001b2a838362001b0b565b60208301905092915050565b6000602082019050919050565b600062001b508262001af0565b62001b5c818562001639565b935062001b698362001afb565b8060005b8381101562001ba057815162001b84888262001b1c565b975062001b918362001b36565b92505060018101905062001b6d565b5085935050505092915050565b600060c08201905062001bc46000830189620010fa565b818103602083015262001bd8818862001aaf565b9050818103604083015262001bee818762001aaf565b9050818103606083015262001c04818662001852565b9050818103608083015262001c1a818562001852565b905081810360a083015262001c30818462001b43565b9050979650505050505050565b600060a082019050818103600083015262001c59818862001aaf565b9050818103602083015262001c6f818762001aaf565b9050818103604083015262001c85818662001852565b9050818103606083015262001c9b818562001852565b9050818103608083015262001cb1818462001b43565b90509695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168062001d0557607f821691505b60208210810362001d1b5762001d1a62001cbd565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830262001d857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262001d46565b62001d91868362001d46565b95508019841693508086168417925050509392505050565b600062001dca62001dc462001dbe846200119f565b6200165a565b6200119f565b9050919050565b6000819050919050565b62001de68362001da9565b62001dfe62001df58262001dd1565b84845462001d53565b825550505050565b600090565b62001e1562001e06565b62001e2281848462001ddb565b505050565b5b8181101562001e4a5762001e3e60008262001e0b565b60018101905062001e28565b5050565b601f82111562001e995762001e638162001d21565b62001e6e8462001d36565b8101602085101562001e7e578190505b62001e9662001e8d8562001d36565b83018262001e27565b50505b505050565b600082821c905092915050565b600062001ebe6000198460080262001e9e565b1980831691505092915050565b600062001ed9838362001eab565b9150826002028217905092915050565b62001ef482620017a6565b67ffffffffffffffff81111562001f105762001f0f620011f2565b5b62001f1c825462001cec565b62001f2982828562001e4e565b600060209050601f83116001811462001f61576000841562001f4c578287015190505b62001f58858262001ecb565b86555062001fc8565b601f19841662001f718662001d21565b60005b8281101562001f9b5784890151825560018201915060208501945060208101905062001f74565b8683101562001fbb578489015162001fb7601f89168262001eab565b8355505b6001600288020188555050505b505050505050565b6000602082019050818103600083015262001fec818462001aaf565b90509291505056fe60a06040526000600460006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162002566380380620025668339818101604052810190620000529190620006c0565b8573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050846001908162000097919062000a42565b508360029081620000a9919062000a42565b50805160008190555060005b81518110156200013f5762000129848281518110620000d957620000d862000b29565b5b6020026020010151848381518110620000f757620000f662000b29565b5b602002602001015184848151811062000115576200011462000b29565b5b60200260200101516200014c60201b60201c565b8080620001369062000b87565b915050620000b5565b5050505050505062000c61565b600060405180606001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250905080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081620001d8919062000a42565b506020820151816001019081620001f0919062000a42565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fd76352dcc1f8336c0abdec06ee73330eee3e75ba620ba2c87510a25a32439d4e8585604051620002e892919062000c26565b60405180910390a250505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000337826200030a565b9050919050565b62000349816200032a565b81146200035557600080fd5b50565b60008151905062000369816200033e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003c48262000379565b810181811067ffffffffffffffff82111715620003e657620003e56200038a565b5b80604052505050565b6000620003fb620002f6565b9050620004098282620003b9565b919050565b600067ffffffffffffffff8211156200042c576200042b6200038a565b5b620004378262000379565b9050602081019050919050565b60005b838110156200046457808201518184015260208101905062000447565b60008484015250505050565b60006200048762000481846200040e565b620003ef565b905082815260208101848484011115620004a657620004a562000374565b5b620004b384828562000444565b509392505050565b600082601f830112620004d357620004d26200036f565b5b8151620004e584826020860162000470565b91505092915050565b600067ffffffffffffffff8211156200050c576200050b6200038a565b5b602082029050602081019050919050565b600080fd5b6000620005396200053384620004ee565b620003ef565b905080838252602082019050602084028301858111156200055f576200055e6200051d565b5b835b81811015620005ad57805167ffffffffffffffff8111156200058857620005876200036f565b5b808601620005978982620004bb565b8552602085019450505060208101905062000561565b5050509392505050565b600082601f830112620005cf57620005ce6200036f565b5b8151620005e184826020860162000522565b91505092915050565b600067ffffffffffffffff8211156200060857620006076200038a565b5b602082029050602081019050919050565b6000620006306200062a84620005ea565b620003ef565b905080838252602082019050602084028301858111156200065657620006556200051d565b5b835b818110156200068357806200066e888262000358565b84526020840193505060208101905062000658565b5050509392505050565b600082601f830112620006a557620006a46200036f565b5b8151620006b784826020860162000619565b91505092915050565b60008060008060008060c08789031215620006e057620006df62000300565b5b6000620006f089828a0162000358565b965050602087015167ffffffffffffffff81111562000714576200071362000305565b5b6200072289828a01620004bb565b955050604087015167ffffffffffffffff81111562000746576200074562000305565b5b6200075489828a01620004bb565b945050606087015167ffffffffffffffff81111562000778576200077762000305565b5b6200078689828a01620005b7565b935050608087015167ffffffffffffffff811115620007aa57620007a962000305565b5b620007b889828a01620005b7565b92505060a087015167ffffffffffffffff811115620007dc57620007db62000305565b5b620007ea89828a016200068d565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200084a57607f821691505b60208210810362000860576200085f62000802565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200088b565b620008d686836200088b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620009236200091d6200091784620008ee565b620008f8565b620008ee565b9050919050565b6000819050919050565b6200093f8362000902565b620009576200094e826200092a565b84845462000898565b825550505050565b600090565b6200096e6200095f565b6200097b81848462000934565b505050565b5b81811015620009a3576200099760008262000964565b60018101905062000981565b5050565b601f821115620009f257620009bc8162000866565b620009c7846200087b565b81016020851015620009d7578190505b620009ef620009e6856200087b565b83018262000980565b50505b505050565b600082821c905092915050565b600062000a1760001984600802620009f7565b1980831691505092915050565b600062000a32838362000a04565b9150826002028217905092915050565b62000a4d82620007f7565b67ffffffffffffffff81111562000a695762000a686200038a565b5b62000a75825462000831565b62000a82828285620009a7565b600060209050601f83116001811462000aba576000841562000aa5578287015190505b62000ab1858262000a24565b86555062000b21565b601f19841662000aca8662000866565b60005b8281101562000af45784890151825560018201915060208501945060208101905062000acd565b8683101562000b14578489015162000b10601f89168262000a04565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000b9482620008ee565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000bc95762000bc862000b58565b5b600182019050919050565b600082825260208201905092915050565b600062000bf282620007f7565b62000bfe818562000bd4565b935062000c1081856020860162000444565b62000c1b8162000379565b840191505092915050565b6000604082019050818103600083015262000c42818562000be5565b9050818103602083015262000c58818462000be5565b90509392505050565b6080516118d462000c926000396000818161097b01528181610c7001528181610f2b015261120201526118d46000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806375e57251116100a2578063a7d136a811610071578063a7d136a8146102d7578063ad605729146102f5578063d678132414610313578063dba6335f1461031d578063ee9706ac1461033b57610116565b806375e572511461025f5780637b560fc21461027d578063893d20e81461028757806392be02d8146102a557610116565b8063384786d6116100e9578063384786d6146101b757806353d54866146101d557806363cf7ce2146101f357806364fb931b146102115780637143059f1461022f57610116565b80630cc375281461011b57806317d7de7c146101395780633683b583146101575780633686b77814610187575b600080fd5b61012361036b565b6040516101309190611341565b60405180910390f35b6101416103f9565b60405161014e9190611341565b60405180910390f35b610171600480360381019061016c91906113c6565b61048b565b60405161017e919061140e565b60405180910390f35b6101a1600480360381019061019c919061145f565b6104ab565b6040516101ae919061149b565b60405180910390f35b6101bf6104ea565b6040516101cc919061140e565b60405180910390f35b6101dd6104fd565b6040516101ea91906114c5565b60405180910390f35b6101fb610503565b6040516102089190611341565b60405180910390f35b610219610595565b604051610226919061140e565b60405180910390f35b610249600480360381019061024491906113c6565b6105ac565b6040516102569190611590565b60405180910390f35b610267610847565b6040516102749190611341565b60405180910390f35b6102856108d5565b005b61028f610c6c565b60405161029c919061149b565b60405180910390f35b6102bf60048036038101906102ba91906113c6565b610c94565b6040516102ce939291906115b2565b60405180910390f35b6102df610dee565b6040516102ec91906116a6565b60405180910390f35b6102fd610e7c565b60405161030a91906114c5565b60405180910390f35b61031b610e85565b005b610325611200565b604051610332919061149b565b60405180910390f35b610355600480360381019061035091906113c6565b611224565b604051610362919061140e565b60405180910390f35b60018054610378906116f7565b80601f01602080910402602001604051908101604052809291908181526020018280546103a4906116f7565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b505050505081565b606060018054610408906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610434906116f7565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050905090565b60066020528060005260406000206000915054906101000a900460ff1681565b600381815481106104bb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900460ff1681565b60005481565b606060028054610512906116f7565b80601f016020809104026020016040519081016040528092919081815260200182805461053e906116f7565b801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b5050505050905090565b6000600460009054906101000a900460ff16905090565b6105b461127a565b600073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361067c576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546106d6906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610702906116f7565b801561074f5780601f106107245761010080835404028352916020019161074f565b820191906000526020600020905b81548152906001019060200180831161073257829003601f168201915b50505050508152602001600182018054610768906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610794906116f7565b80156107e15780601f106107b6576101008083540402835291602001916107e1565b820191906000526020600020905b8154815290600101906020018083116107c457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60028054610854906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610880906116f7565b80156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b505050505081565b6000600380548060200260200160405190810160405280929190818152602001828054801561095957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161090f575b5050505050905060003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16036109be5760019050610a36565b60005b600054811015610a34573373ffffffffffffffffffffffffffffffffffffffff168382815181106109f5576109f4611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610a215760019150610a34565b8080610a2c90611786565b9150506109c1565b505b80610a6d576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff1615610ab4576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151503610b3e576040517f3b4b7dcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f26c25af05520e978d353f976c99fa4c277ddc75aed4170ec47c9e24f06e62a1c600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101604051610c60929190611867565b60405180910390a25050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6005602052806000526040600020600091509050806000018054610cb7906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce3906116f7565b8015610d305780601f10610d0557610100808354040283529160200191610d30565b820191906000526020600020905b815481529060010190602001808311610d1357829003601f168201915b505050505090806001018054610d45906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d71906116f7565b8015610dbe5780601f10610d9357610100808354040283529160200191610dbe565b820191906000526020600020905b815481529060010190602001808311610da157829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60606003805480602002602001604051908101604052809291908181526020018280548015610e7257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e28575b5050505050905090565b60008054905090565b60006003805480602002602001604051908101604052809291908181526020018280548015610f0957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ebf575b5050505050905060003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1603610f6e5760019050610fe6565b60005b600054811015610fe4573373ffffffffffffffffffffffffffffffffffffffff16838281518110610fa557610fa4611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610fd15760019150610fe4565b8080610fdc90611786565b915050610f71565b505b8061101d576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff1615611064576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060038054806020026020016040519081016040528092919081815260200182805480156110e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161109e575b5050505050905060005b6000548110156111b357600015156006600084848151811061111757611116611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036111a0576040517fadba427200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806111ab90611786565b9150506110f2565b506001600460006101000a81548160ff0219169083151502179055507f77b99c173854235e0f45948e541b3d590e15d05c680efbedc9c18bcb845aa01c60405160405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b838110156112eb5780820151818401526020810190506112d0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611313826112b1565b61131d81856112bc565b935061132d8185602086016112cd565b611336816112f7565b840191505092915050565b6000602082019050818103600083015261135b8184611308565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139382611368565b9050919050565b6113a381611388565b81146113ae57600080fd5b50565b6000813590506113c08161139a565b92915050565b6000602082840312156113dc576113db611363565b5b60006113ea848285016113b1565b91505092915050565b60008115159050919050565b611408816113f3565b82525050565b600060208201905061142360008301846113ff565b92915050565b6000819050919050565b61143c81611429565b811461144757600080fd5b50565b60008135905061145981611433565b92915050565b60006020828403121561147557611474611363565b5b60006114838482850161144a565b91505092915050565b61149581611388565b82525050565b60006020820190506114b0600083018461148c565b92915050565b6114bf81611429565b82525050565b60006020820190506114da60008301846114b6565b92915050565b600082825260208201905092915050565b60006114fc826112b1565b61150681856114e0565b93506115168185602086016112cd565b61151f816112f7565b840191505092915050565b61153381611388565b82525050565b6000606083016000830151848203600086015261155682826114f1565b9150506020830151848203602086015261157082826114f1565b9150506040830151611585604086018261152a565b508091505092915050565b600060208201905081810360008301526115aa8184611539565b905092915050565b600060608201905081810360008301526115cc8186611308565b905081810360208301526115e08185611308565b90506115ef604083018461148c565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061162f838361152a565b60208301905092915050565b6000602082019050919050565b6000611653826115f7565b61165d8185611602565b935061166883611613565b8060005b838110156116995781516116808882611623565b975061168b8361163b565b92505060018101905061166c565b5085935050505092915050565b600060208201905081810360008301526116c08184611648565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061170f57607f821691505b602082108103611722576117216116c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179182611429565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117c3576117c2611757565b5b600182019050919050565b60008190508160005260206000209050919050565b600081546117f0816116f7565b6117fa81866112bc565b94506001821660008114611815576001811461182b5761185e565b60ff19831686528115156020028601935061185e565b611834856117ce565b60005b8381101561185657815481890152600182019150602081019050611837565b808801955050505b50505092915050565b6000604082019050818103600083015261188181856117e3565b9050818103602083015261189581846117e3565b9050939250505056fea26469706673582212208136947216c9a0148a12b09caf58bc26c624089ff32f49b8c07537728ffb521064736f6c63430008100033a264697066735822122084635e06edf554bc281297ee38f2177c87adb67a1bb0c048d609471a4d46accf64736f6c63430008100033",
  "devdoc": {
    "author": "polarzero",
    "kind": "dev",
    "methods": {
      "addTwitterVerifiedUser(address,string)": {
        "details": "Only the verifier contract can call this function, after the account has been verified with the Chainlink Node + External Adapter",
        "params": {
          "_twitterHandle": "The Twitter handle of the verified account",
          "_userAddress": "The address of the user"
        }
      },
      "createPromiseContract(string,string,string[],string[],address[])": {
        "params": {
          "_partyAddresses": "The addresses specified by the user that will be allowed to interact with the contract",
          "_partyNames": "The names of the parties specified by the user",
          "_partyTwitterHandles": "The Twitter handles of the parties specified by the user",
          "_pdfUri": "The URI of the PDF file stored on IPFS",
          "_promiseName": "The name of the contract specified by the user"
        }
      }
    },
    "title": "Master Contract",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "PromiseFactory__createPromiseContract__EMPTY_FIELD()": [
        {
          "notice": "Errors"
        }
      ]
    },
    "events": {
      "PromiseContractCreated(address,address,string,string,string[],string[],address[])": {
        "notice": "Events"
      }
    },
    "kind": "user",
    "methods": {
      "addTwitterVerifiedUser(address,string)": {
        "notice": "Add a verified Twitter account to the list of verified accounts"
      },
      "constructor": {
        "notice": "Initialize the contract"
      },
      "createPromiseContract(string,string,string[],string[],address[])": {
        "notice": "Create a new contract and add it to the list of child contracts"
      },
      "getPromiseContractAddresses(address)": {
        "notice": "Getters"
      },
      "setVerifier(address)": {
        "notice": "Setters"
      }
    },
    "notice": "This is the master contract initializing & referencing all child contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 429,
        "contract": "contracts/PromiseFactory.sol:PromiseFactory",
        "label": "s_verifier",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 435,
        "contract": "contracts/PromiseFactory.sol:PromiseFactory",
        "label": "s_promiseContracts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_contract(PromiseContract)407)dyn_storage)"
      },
      {
        "astId": 440,
        "contract": "contracts/PromiseFactory.sol:PromiseFactory",
        "label": "s_twitterVerifiedUsers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(PromiseContract)407)dyn_storage": {
        "base": "t_contract(PromiseContract)407",
        "encoding": "dynamic_array",
        "label": "contract PromiseContract[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_contract(PromiseContract)407": {
        "encoding": "inplace",
        "label": "contract PromiseContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_contract(PromiseContract)407)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract PromiseContract[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(PromiseContract)407)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}