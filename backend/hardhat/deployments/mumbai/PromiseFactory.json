{
  "address": "0x9a26cA9509C6E2bBE7CcB59A1fbbfcf9DFf37f60",
  "abi": [
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__DUPLICATE_FIELD",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__EMPTY_FIELD",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__INVALID_URI",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_promiseName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_pdfUri",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_partyNames",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_partyTwitterHandles",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_partyAddresses",
          "type": "address[]"
        }
      ],
      "name": "PromiseContractCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_promiseName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_pdfUri",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_partyNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_partyTwitterHandles",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_partyAddresses",
          "type": "address[]"
        }
      ],
      "name": "createPromiseContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "promiseContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getPromiseContractAddresses",
      "outputs": [
        {
          "internalType": "contract PromiseContract[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getPromiseContractCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "promiseContracts",
      "outputs": [
        {
          "internalType": "contract PromiseContract",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb87764d5ac44adfc6632d2f1ac346957868578f9794c5e133518cd823679d44d",
  "receipt": {
    "to": null,
    "from": "0xc06d127E504a944f63Bc750D8F512556c576F3EF",
    "contractAddress": "0x9a26cA9509C6E2bBE7CcB59A1fbbfcf9DFf37f60",
    "transactionIndex": 29,
    "gasUsed": "3190896",
    "logsBloom": "0x
    "blockHash": "0xcf8560986ce6740bd86fe3dd0b1b27bc54cf38c891011d6bd1246617eb6e3500",
    "transactionHash": "0xb87764d5ac44adfc6632d2f1ac346957868578f9794c5e133518cd823679d44d",
    "logs": [
      {
        "transactionIndex": 29,
        "blockNumber": 28785252,
        "transactionHash": "0xb87764d5ac44adfc6632d2f1ac346957868578f9794c5e133518cd823679d44d",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c06d127e504a944f63bc750d8f512556c576f3ef",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001101278de49000000000000000000000000000000000000000000000000000049b1061d9032857000000000000000000000000000000000000000000000846b6cdbeeab9df3c79000000000000000000000000000000000000000000000000048a0f3a4b1e9857000000000000000000000000000000000000000000000846b6dec01247c3cc79",
        "logIndex": 107,
        "blockHash": "0xcf8560986ce6740bd86fe3dd0b1b27bc54cf38c891011d6bd1246617eb6e3500"
      }
    ],
    "blockNumber": 28785252,
    "cumulativeGasUsed": "7684264",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "83cd0bee36dbab8bd42055518ef89e6b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__DUPLICATE_FIELD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__EMPTY_FIELD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__INVALID_URI\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_promiseName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_pdfUri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_partyNames\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_partyTwitterHandles\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_partyAddresses\",\"type\":\"address[]\"}],\"name\":\"PromiseContractCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_promiseName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_pdfUri\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_partyNames\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_partyTwitterHandles\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_partyAddresses\",\"type\":\"address[]\"}],\"name\":\"createPromiseContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"promiseContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getPromiseContractAddresses\",\"outputs\":[{\"internalType\":\"contract PromiseContract[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getPromiseContractCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"promiseContracts\",\"outputs\":[{\"internalType\":\"contract PromiseContract\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"polarzero\",\"kind\":\"dev\",\"methods\":{\"createPromiseContract(string,string,string[],string[],address[])\":{\"params\":{\"_partyAddresses\":\"The addresses specified by the user that will be allowed to interact with the contract\",\"_partyNames\":\"The names of the parties specified by the user\",\"_partyTwitterHandles\":\"The Twitter handles of the parties specified by the user\",\"_pdfUri\":\"The URI of the PDF file stored on IPFS\",\"_promiseName\":\"The name of the contract specified by the user\"}}},\"title\":\"Master Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"PromiseFactory__createPromiseContract__EMPTY_FIELD()\":[{\"notice\":\"Errors\"}]},\"events\":{\"PromiseContractCreated(address,address,string,string,string[],string[],address[])\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"createPromiseContract(string,string,string[],string[],address[])\":{\"notice\":\"Create a new contract and add it to the list of child contracts\"},\"getPromiseContractAddresses(address)\":{\"notice\":\"Getters\"}},\"notice\":\"This is the master contract initializing & referencing all child contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PromiseFactory.sol\":\"PromiseFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PromiseContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\n/**\\n * @author polarzero\\n * @title Promise Contract\\n * @notice This is the child contract generated by the Promise Factory\\n * once a user creates a new promise\\n */\\n\\ncontract PromiseContract {\\n    /// Errors\\n    error PromiseContract__NOT_PARTICIPANT();\\n    error PromiseContract__PROMISE_LOCKED();\\n    error PromiseContract__approvePromise__ALREADY_APPROVED();\\n    error PromiseContract__lockPromise__PARTICIPANT_NOT_APPROVED();\\n\\n    /// Types\\n    struct Participant {\\n        string participantName;\\n        string participantTwitterHandle;\\n        address participantAddress;\\n    }\\n\\n    /// Variables\\n    uint256 public s_participantCount;\\n    string public s_promiseName;\\n    string public s_pdfUri;\\n    address public immutable i_owner;\\n    address[] public s_participantAddresses;\\n    bool public s_promiseLocked = false;\\n\\n    // Mapping of addresses to name & twitter handle\\n    mapping(address => Participant) public s_parties;\\n    // Mapping of addresses to whether or not they have approved the agreement\\n    mapping(address => bool) public s_approvedParties;\\n\\n    /// Events\\n    event ParticipantCreated(\\n        string participantName,\\n        string participantTwitterHandle,\\n        address indexed participantAddress\\n    );\\n\\n    event ParticipantApproved(\\n        string participantName,\\n        string participantTwitterHandle,\\n        address indexed participantAddress\\n    );\\n\\n    event PromiseLocked();\\n\\n    /// Modifiers\\n    modifier onlyParticipant() {\\n        address[] memory participantAddresses = s_participantAddresses;\\n        bool isParticipant = false;\\n\\n        // The owner will probably interact more with the contract\\n        // So we can save some gas by checking it first\\n        if (i_owner == msg.sender) {\\n            isParticipant = true;\\n        } else {\\n            // Loop through the parties and check if the sender is a party\\n            for (uint256 i = 0; i < s_participantCount; i++) {\\n                if (participantAddresses[i] == msg.sender) {\\n                    isParticipant = true;\\n                    break;\\n                }\\n            }\\n        }\\n\\n        if (!isParticipant) revert PromiseContract__NOT_PARTICIPANT();\\n        _;\\n    }\\n\\n    modifier onlyUnlocked() {\\n        if (s_promiseLocked) revert PromiseContract__PROMISE_LOCKED();\\n        _;\\n    }\\n\\n    /// Functions\\n    /**\\n     * @dev Initialize the contract from the Master Contract with the user address as the owner\\n     */\\n\\n    constructor(\\n        address _owner,\\n        string memory _promiseName,\\n        string memory _pdfUri,\\n        string[] memory _partyNames,\\n        string[] memory _partyTwitterHandles,\\n        address[] memory _partyAddresses\\n    ) {\\n        i_owner = _owner;\\n        s_promiseName = _promiseName;\\n        s_pdfUri = _pdfUri;\\n        s_participantCount = _partyAddresses.length;\\n\\n        for (uint256 i = 0; i < _partyAddresses.length; i++) {\\n            _createParticipant(\\n                _partyNames[i],\\n                _partyTwitterHandles[i],\\n                _partyAddresses[i]\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Approve the promise as a participant\\n     */\\n\\n    function approvePromise() public onlyParticipant onlyUnlocked {\\n        if (s_approvedParties[msg.sender] == true) {\\n            revert PromiseContract__approvePromise__ALREADY_APPROVED();\\n        }\\n\\n        s_approvedParties[msg.sender] = true;\\n        emit ParticipantApproved(\\n            s_parties[msg.sender].participantName,\\n            s_parties[msg.sender].participantTwitterHandle,\\n            msg.sender\\n        );\\n    }\\n\\n    /**\\n     * @notice Validate the promise and lock it so that no more participants can change any state\\n     * or even try to and lose gas\\n     */\\n\\n    function lockPromise() public onlyParticipant onlyUnlocked {\\n        address[] memory participantAddresses = s_participantAddresses;\\n\\n        // Loop through the parties and check if anyone has not approved yet\\n        for (uint256 i = 0; i < s_participantCount; i++) {\\n            if (s_approvedParties[participantAddresses[i]] == false) {\\n                revert PromiseContract__lockPromise__PARTICIPANT_NOT_APPROVED();\\n            }\\n        }\\n\\n        s_promiseLocked = true;\\n        emit PromiseLocked();\\n    }\\n\\n    /**\\n     * @notice Create a new participant and add them to the mapping\\n     * @dev This function can only be called during the contract creation\\n     * @param _participantName The name of the participant\\n     * @param _participantTwitterHandle The twitter handle of the participant\\n     * @param _participantAddress The address of the participant\\n     */\\n\\n    function _createParticipant(\\n        string memory _participantName,\\n        string memory _participantTwitterHandle,\\n        address _participantAddress\\n    ) private {\\n        Participant memory participant = Participant(\\n            _participantName,\\n            _participantTwitterHandle,\\n            _participantAddress\\n        );\\n        s_parties[_participantAddress] = participant;\\n        s_participantAddresses.push(_participantAddress);\\n\\n        emit ParticipantCreated(\\n            _participantName,\\n            _participantTwitterHandle,\\n            _participantAddress\\n        );\\n    }\\n\\n    /// Getters\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getName() public view returns (string memory) {\\n        return s_promiseName;\\n    }\\n\\n    function getPdfUri() public view returns (string memory) {\\n        return s_pdfUri;\\n    }\\n\\n    function getParticipant(address _participantAddress)\\n        public\\n        view\\n        returns (Participant memory)\\n    {\\n        if (s_parties[_participantAddress].participantAddress == address(0)) {\\n            revert PromiseContract__NOT_PARTICIPANT();\\n        }\\n\\n        return s_parties[_participantAddress];\\n    }\\n\\n    function getParticipantCount() public view returns (uint256) {\\n        return s_participantCount;\\n    }\\n\\n    function getParticipantAddresses() public view returns (address[] memory) {\\n        return s_participantAddresses;\\n    }\\n\\n    function getIsPromiseApproved(address _participantAddress)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        return s_approvedParties[_participantAddress];\\n    }\\n\\n    function getIsPromiseLocked() public view returns (bool) {\\n        return s_promiseLocked;\\n    }\\n}\\n\",\"keccak256\":\"0x6652bdbeb77cb8ea0df2bb45fbaa0fb31d195cd0e839e6693748d8561b7db6d1\",\"license\":\"MIT\"},\"contracts/PromiseFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\nimport \\\"./PromiseContract.sol\\\";\\nimport \\\"hardhat/console.sol\\\";\\n\\n/**\\n * @author polarzero\\n * @title Master Contract\\n * @notice This is the master contract initializing & referencing all child contracts\\n */\\n\\ncontract PromiseFactory {\\n    /// Errors\\n    error PromiseFactory__createPromiseContract__EMPTY_FIELD();\\n    error PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH();\\n    error PromiseFactory__createPromiseContract__DUPLICATE_FIELD();\\n    error PromiseFactory__createPromiseContract__INVALID_URI();\\n\\n    // Map the owner addresses to the child contracts they created\\n    mapping(address => PromiseContract[]) public promiseContracts;\\n\\n    /// Events\\n    event PromiseContractCreated(\\n        address indexed _owner,\\n        address indexed _contractAddress,\\n        string _promiseName,\\n        string _pdfUri,\\n        string[] _partyNames,\\n        string[] _partyTwitterHandles,\\n        address[] _partyAddresses\\n    );\\n\\n    /// Functions\\n    /**\\n     * @notice Create a new contract and add it to the list of child contracts\\n     * @param _promiseName The name of the contract specified by the user\\n     * @param _pdfUri The URI of the PDF file stored on IPFS\\n     * @param _partyNames The names of the parties specified by the user\\n     * @param _partyTwitterHandles The Twitter handles of the parties specified by the user\\n     * @param _partyAddresses The addresses specified by the user that will be allowed to interact\\n     * with the contract\\n     */\\n\\n    function createPromiseContract(\\n        string memory _promiseName,\\n        string memory _pdfUri,\\n        string[] memory _partyNames,\\n        string[] memory _partyTwitterHandles,\\n        address[] memory _partyAddresses\\n    ) public returns (address promiseContractAddress) {\\n        // Revert if one of the fields is empty\\n        if (\\n            !(bytes(_promiseName).length > 0 &&\\n                bytes(_pdfUri).length > 0 &&\\n                _partyNames.length > 0 &&\\n                _partyAddresses.length > 0)\\n        ) revert PromiseFactory__createPromiseContract__EMPTY_FIELD();\\n\\n        // Revert if the number of names, Twitter and addresses are not equal\\n        // If Twitter handles are not provided, it will pass an empty string\\n        if (\\n            !(_partyAddresses.length == _partyTwitterHandles.length &&\\n                _partyAddresses.length == _partyNames.length)\\n        )\\n            revert PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH();\\n\\n        // Revert if the same address or twitter handle is used twice\\n        for (uint256 i = 0; i < _partyAddresses.length; i++) {\\n            for (uint256 j = i + 1; j < _partyAddresses.length; j++) {\\n                if (\\n                    _partyAddresses[i] == _partyAddresses[j] ||\\n                    keccak256(abi.encodePacked(_partyTwitterHandles[i])) ==\\n                    keccak256(abi.encodePacked(_partyTwitterHandles[j]))\\n                )\\n                    revert PromiseFactory__createPromiseContract__DUPLICATE_FIELD();\\n            }\\n        }\\n\\n        // We could test the validity of the Twitter handles here, but it would not really matter\\n        // since it won't have any value without being verified, and the verification already\\n        // needs it to be valid\\n\\n        // Revert if the name of the promise is longer than 70 characters\\n        if (bytes(_promiseName).length > 70) {\\n            revert PromiseFactory__createPromiseContract__INCORRECT_FIELD_LENGTH();\\n        }\\n\\n        // Check if the provided URI is a valid IPFS URI\\n        bytes memory pdfUriBytes = bytes(_pdfUri);\\n\\n        // Minimum 5 bytes encoded in Base58 -> minimum 7 characters\\n        if (!(pdfUriBytes.length > 6))\\n            revert PromiseFactory__createPromiseContract__INVALID_URI();\\n\\n        // It should match the allowed characters in Base58\\n        for (uint i = 0; i < pdfUriBytes.length; i++) {\\n            if (\\n                !(0x7ffeffe07ff7dfe03fe000000000000 &\\n                    (uint(1) << uint8(pdfUriBytes[i])) >\\n                    0)\\n            ) {\\n                revert PromiseFactory__createPromiseContract__INVALID_URI();\\n            }\\n        }\\n\\n        // Create a new contract for this promise\\n        PromiseContract promiseContract = new PromiseContract(\\n            msg.sender,\\n            _promiseName,\\n            _pdfUri,\\n            _partyNames,\\n            _partyTwitterHandles,\\n            _partyAddresses\\n        );\\n        promiseContracts[msg.sender].push(promiseContract);\\n\\n        emit PromiseContractCreated(\\n            msg.sender,\\n            address(promiseContract),\\n            _promiseName,\\n            _pdfUri,\\n            _partyNames,\\n            _partyTwitterHandles,\\n            _partyAddresses\\n        );\\n\\n        return address(promiseContract);\\n    }\\n\\n    /// Getters\\n    function getPromiseContractAddresses(address _owner)\\n        public\\n        view\\n        returns (PromiseContract[] memory)\\n    {\\n        return promiseContracts[_owner];\\n    }\\n\\n    function getPromiseContractCount(address _userAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return promiseContracts[_userAddress].length;\\n    }\\n}\\n\",\"keccak256\":\"0x61564b57c4e59292ea49f3dac1acb6f6f071205080928b1244d92ddb3141e797\",\"license\":\"MIT\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int256)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint256 p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint256,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint256 p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint256,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint256 p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint256,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint256 p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint256)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x60b0215121bf25612a6739fb2f1ec35f31ee82e4a8216c032c8243d904ab3aa9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50613910806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000525760003560e01c80634784336f146200005757806386605062146200008d578063d210fee314620000c3578063da9f385e14620000f9575b600080fd5b6200007560048036038101906200006f9190620007da565b6200012f565b60405162000084919062000827565b60405180910390f35b620000ab6004803603810190620000a5919062000b78565b6200017a565b604051620000ba919062000cac565b60405180910390f35b620000e16004803603810190620000db9190620007da565b62000636565b604051620000f0919062000df1565b60405180910390f35b62000117600480360381019062000111919062000e46565b62000704565b60405162000126919062000e9e565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60008086511180156200018e575060008551115b80156200019c575060008451115b8015620001aa575060008251115b620001e1576040517fb0bac3b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518251148015620001f4575083518251145b6200022b576040517f21938d4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015620003b957600060018262000249919062000eea565b90505b8351811015620003a2578381815181106200026c576200026b62000f25565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16848381518110620002a0576200029f62000f25565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161480620003545750848181518110620002dc57620002db62000f25565b5b6020026020010151604051602001620002f6919062000fcd565b6040516020818303038152906040528051906020012085838151811062000322576200032162000f25565b5b60200260200101516040516020016200033c919062000fcd565b60405160208183030381529060405280519060200120145b156200038c576040517f301cd94e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080620003999062000fe6565b9150506200024c565b508080620003b09062000fe6565b9150506200022e565b50604686511115620003f7576040517f21938d4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000859050600681511162000438576040517f7f916f4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8151811015620004d25760008282815181106200045d576200045c62000f25565b5b602001015160f81c60f81b60f81c60ff166001901b6f07ffeffe07ff7dfe03fe0000000000001611620004bc576040517f7f916f4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080620004c99062000fe6565b9150506200043b565b506000338888888888604051620004e99062000753565b620004fa9695949392919062001264565b604051809103906000f08015801562000517573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7218ecb1d60a4ca32226db62922bd3917372e8801cddba0cc86fffd285ff74428a8a8a8a8a60405162000620959493929190620012f4565b60405180910390a3809250505095945050505050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620006f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620006ad575b50505050509050919050565b600060205281600052604060002081815481106200072157600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612566806200137583390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007a28262000775565b9050919050565b620007b48162000795565b8114620007c057600080fd5b50565b600081359050620007d481620007a9565b92915050565b600060208284031215620007f357620007f26200076b565b5b60006200080384828501620007c3565b91505092915050565b6000819050919050565b62000821816200080c565b82525050565b60006020820190506200083e600083018462000816565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000899826200084e565b810181811067ffffffffffffffff82111715620008bb57620008ba6200085f565b5b80604052505050565b6000620008d062000761565b9050620008de82826200088e565b919050565b600067ffffffffffffffff8211156200090157620009006200085f565b5b6200090c826200084e565b9050602081019050919050565b82818337600083830152505050565b60006200093f6200093984620008e3565b620008c4565b9050828152602081018484840111156200095e576200095d62000849565b5b6200096b84828562000919565b509392505050565b600082601f8301126200098b576200098a62000844565b5b81356200099d84826020860162000928565b91505092915050565b600067ffffffffffffffff821115620009c457620009c36200085f565b5b602082029050602081019050919050565b600080fd5b6000620009f1620009eb84620009a6565b620008c4565b9050808382526020820190506020840283018581111562000a175762000a16620009d5565b5b835b8181101562000a6557803567ffffffffffffffff81111562000a405762000a3f62000844565b5b80860162000a4f898262000973565b8552602085019450505060208101905062000a19565b5050509392505050565b600082601f83011262000a875762000a8662000844565b5b813562000a99848260208601620009da565b91505092915050565b600067ffffffffffffffff82111562000ac05762000abf6200085f565b5b602082029050602081019050919050565b600062000ae862000ae28462000aa2565b620008c4565b9050808382526020820190506020840283018581111562000b0e5762000b0d620009d5565b5b835b8181101562000b3b578062000b268882620007c3565b84526020840193505060208101905062000b10565b5050509392505050565b600082601f83011262000b5d5762000b5c62000844565b5b813562000b6f84826020860162000ad1565b91505092915050565b600080600080600060a0868803121562000b975762000b966200076b565b5b600086013567ffffffffffffffff81111562000bb85762000bb762000770565b5b62000bc68882890162000973565b955050602086013567ffffffffffffffff81111562000bea5762000be962000770565b5b62000bf88882890162000973565b945050604086013567ffffffffffffffff81111562000c1c5762000c1b62000770565b5b62000c2a8882890162000a6f565b935050606086013567ffffffffffffffff81111562000c4e5762000c4d62000770565b5b62000c5c8882890162000a6f565b925050608086013567ffffffffffffffff81111562000c805762000c7f62000770565b5b62000c8e8882890162000b45565b9150509295509295909350565b62000ca68162000795565b82525050565b600060208201905062000cc3600083018462000c9b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b600062000d2062000d1a62000d148462000775565b62000cf5565b62000775565b9050919050565b600062000d348262000cff565b9050919050565b600062000d488262000d27565b9050919050565b62000d5a8162000d3b565b82525050565b600062000d6e838362000d4f565b60208301905092915050565b6000602082019050919050565b600062000d948262000cc9565b62000da0818562000cd4565b935062000dad8362000ce5565b8060005b8381101562000de457815162000dc8888262000d60565b975062000dd58362000d7a565b92505060018101905062000db1565b5085935050505092915050565b6000602082019050818103600083015262000e0d818462000d87565b905092915050565b62000e20816200080c565b811462000e2c57600080fd5b50565b60008135905062000e408162000e15565b92915050565b6000806040838503121562000e605762000e5f6200076b565b5b600062000e7085828601620007c3565b925050602062000e838582860162000e2f565b9150509250929050565b62000e988162000d3b565b82525050565b600060208201905062000eb5600083018462000e8d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000ef7826200080c565b915062000f04836200080c565b925082820190508082111562000f1f5762000f1e62000ebb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101562000f8a57808201518184015260208101905062000f6d565b60008484015250505050565b600062000fa38262000f54565b62000faf818562000f5f565b935062000fc181856020860162000f6a565b80840191505092915050565b600062000fdb828462000f96565b915081905092915050565b600062000ff3826200080c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001028576200102762000ebb565b5b600182019050919050565b600082825260208201905092915050565b6000620010518262000f54565b6200105d818562001033565b93506200106f81856020860162000f6a565b6200107a816200084e565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000620010cf8262000f54565b620010db8185620010b1565b9350620010ed81856020860162000f6a565b620010f8816200084e565b840191505092915050565b6000620011118383620010c2565b905092915050565b6000602082019050919050565b6000620011338262001085565b6200113f818562001090565b9350836020820285016200115385620010a1565b8060005b8581101562001195578484038952815162001173858262001103565b9450620011808362001119565b925060208a0199505060018101905062001157565b50829750879550505050505092915050565b600081519050919050565b6000819050602082019050919050565b620011cd8162000795565b82525050565b6000620011e18383620011c2565b60208301905092915050565b6000602082019050919050565b60006200120782620011a7565b62001213818562000cd4565b93506200122083620011b2565b8060005b83811015620012575781516200123b8882620011d3565b97506200124883620011ed565b92505060018101905062001224565b5085935050505092915050565b600060c0820190506200127b600083018962000c9b565b81810360208301526200128f818862001044565b90508181036040830152620012a5818762001044565b90508181036060830152620012bb818662001126565b90508181036080830152620012d1818562001126565b905081810360a0830152620012e78184620011fa565b9050979650505050505050565b600060a082019050818103600083015262001310818862001044565b9050818103602083015262001326818762001044565b905081810360408301526200133c818662001126565b9050818103606083015262001352818562001126565b90508181036080830152620013688184620011fa565b9050969550505050505056fe60a06040526000600460006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162002566380380620025668339818101604052810190620000529190620006c0565b8573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050846001908162000097919062000a42565b508360029081620000a9919062000a42565b50805160008190555060005b81518110156200013f5762000129848281518110620000d957620000d862000b29565b5b6020026020010151848381518110620000f757620000f662000b29565b5b602002602001015184848151811062000115576200011462000b29565b5b60200260200101516200014c60201b60201c565b8080620001369062000b87565b915050620000b5565b5050505050505062000c61565b600060405180606001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250905080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081620001d8919062000a42565b506020820151816001019081620001f0919062000a42565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fd76352dcc1f8336c0abdec06ee73330eee3e75ba620ba2c87510a25a32439d4e8585604051620002e892919062000c26565b60405180910390a250505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000337826200030a565b9050919050565b62000349816200032a565b81146200035557600080fd5b50565b60008151905062000369816200033e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003c48262000379565b810181811067ffffffffffffffff82111715620003e657620003e56200038a565b5b80604052505050565b6000620003fb620002f6565b9050620004098282620003b9565b919050565b600067ffffffffffffffff8211156200042c576200042b6200038a565b5b620004378262000379565b9050602081019050919050565b60005b838110156200046457808201518184015260208101905062000447565b60008484015250505050565b60006200048762000481846200040e565b620003ef565b905082815260208101848484011115620004a657620004a562000374565b5b620004b384828562000444565b509392505050565b600082601f830112620004d357620004d26200036f565b5b8151620004e584826020860162000470565b91505092915050565b600067ffffffffffffffff8211156200050c576200050b6200038a565b5b602082029050602081019050919050565b600080fd5b6000620005396200053384620004ee565b620003ef565b905080838252602082019050602084028301858111156200055f576200055e6200051d565b5b835b81811015620005ad57805167ffffffffffffffff8111156200058857620005876200036f565b5b808601620005978982620004bb565b8552602085019450505060208101905062000561565b5050509392505050565b600082601f830112620005cf57620005ce6200036f565b5b8151620005e184826020860162000522565b91505092915050565b600067ffffffffffffffff8211156200060857620006076200038a565b5b602082029050602081019050919050565b6000620006306200062a84620005ea565b620003ef565b905080838252602082019050602084028301858111156200065657620006556200051d565b5b835b818110156200068357806200066e888262000358565b84526020840193505060208101905062000658565b5050509392505050565b600082601f830112620006a557620006a46200036f565b5b8151620006b784826020860162000619565b91505092915050565b60008060008060008060c08789031215620006e057620006df62000300565b5b6000620006f089828a0162000358565b965050602087015167ffffffffffffffff81111562000714576200071362000305565b5b6200072289828a01620004bb565b955050604087015167ffffffffffffffff81111562000746576200074562000305565b5b6200075489828a01620004bb565b945050606087015167ffffffffffffffff81111562000778576200077762000305565b5b6200078689828a01620005b7565b935050608087015167ffffffffffffffff811115620007aa57620007a962000305565b5b620007b889828a01620005b7565b92505060a087015167ffffffffffffffff811115620007dc57620007db62000305565b5b620007ea89828a016200068d565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200084a57607f821691505b60208210810362000860576200085f62000802565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200088b565b620008d686836200088b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620009236200091d6200091784620008ee565b620008f8565b620008ee565b9050919050565b6000819050919050565b6200093f8362000902565b620009576200094e826200092a565b84845462000898565b825550505050565b600090565b6200096e6200095f565b6200097b81848462000934565b505050565b5b81811015620009a3576200099760008262000964565b60018101905062000981565b5050565b601f821115620009f257620009bc8162000866565b620009c7846200087b565b81016020851015620009d7578190505b620009ef620009e6856200087b565b83018262000980565b50505b505050565b600082821c905092915050565b600062000a1760001984600802620009f7565b1980831691505092915050565b600062000a32838362000a04565b9150826002028217905092915050565b62000a4d82620007f7565b67ffffffffffffffff81111562000a695762000a686200038a565b5b62000a75825462000831565b62000a82828285620009a7565b600060209050601f83116001811462000aba576000841562000aa5578287015190505b62000ab1858262000a24565b86555062000b21565b601f19841662000aca8662000866565b60005b8281101562000af45784890151825560018201915060208501945060208101905062000acd565b8683101562000b14578489015162000b10601f89168262000a04565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000b9482620008ee565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000bc95762000bc862000b58565b5b600182019050919050565b600082825260208201905092915050565b600062000bf282620007f7565b62000bfe818562000bd4565b935062000c1081856020860162000444565b62000c1b8162000379565b840191505092915050565b6000604082019050818103600083015262000c42818562000be5565b9050818103602083015262000c58818462000be5565b90509392505050565b6080516118d462000c926000396000818161097b01528181610c7001528181610f2b015261120201526118d46000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806375e57251116100a2578063a7d136a811610071578063a7d136a8146102d7578063ad605729146102f5578063d678132414610313578063dba6335f1461031d578063ee9706ac1461033b57610116565b806375e572511461025f5780637b560fc21461027d578063893d20e81461028757806392be02d8146102a557610116565b8063384786d6116100e9578063384786d6146101b757806353d54866146101d557806363cf7ce2146101f357806364fb931b146102115780637143059f1461022f57610116565b80630cc375281461011b57806317d7de7c146101395780633683b583146101575780633686b77814610187575b600080fd5b61012361036b565b6040516101309190611341565b60405180910390f35b6101416103f9565b60405161014e9190611341565b60405180910390f35b610171600480360381019061016c91906113c6565b61048b565b60405161017e919061140e565b60405180910390f35b6101a1600480360381019061019c919061145f565b6104ab565b6040516101ae919061149b565b60405180910390f35b6101bf6104ea565b6040516101cc919061140e565b60405180910390f35b6101dd6104fd565b6040516101ea91906114c5565b60405180910390f35b6101fb610503565b6040516102089190611341565b60405180910390f35b610219610595565b604051610226919061140e565b60405180910390f35b610249600480360381019061024491906113c6565b6105ac565b6040516102569190611590565b60405180910390f35b610267610847565b6040516102749190611341565b60405180910390f35b6102856108d5565b005b61028f610c6c565b60405161029c919061149b565b60405180910390f35b6102bf60048036038101906102ba91906113c6565b610c94565b6040516102ce939291906115b2565b60405180910390f35b6102df610dee565b6040516102ec91906116a6565b60405180910390f35b6102fd610e7c565b60405161030a91906114c5565b60405180910390f35b61031b610e85565b005b610325611200565b604051610332919061149b565b60405180910390f35b610355600480360381019061035091906113c6565b611224565b604051610362919061140e565b60405180910390f35b60018054610378906116f7565b80601f01602080910402602001604051908101604052809291908181526020018280546103a4906116f7565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b505050505081565b606060018054610408906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610434906116f7565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050905090565b60066020528060005260406000206000915054906101000a900460ff1681565b600381815481106104bb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900460ff1681565b60005481565b606060028054610512906116f7565b80601f016020809104026020016040519081016040528092919081815260200182805461053e906116f7565b801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b5050505050905090565b6000600460009054906101000a900460ff16905090565b6105b461127a565b600073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361067c576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546106d6906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610702906116f7565b801561074f5780601f106107245761010080835404028352916020019161074f565b820191906000526020600020905b81548152906001019060200180831161073257829003601f168201915b50505050508152602001600182018054610768906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610794906116f7565b80156107e15780601f106107b6576101008083540402835291602001916107e1565b820191906000526020600020905b8154815290600101906020018083116107c457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60028054610854906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610880906116f7565b80156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b505050505081565b6000600380548060200260200160405190810160405280929190818152602001828054801561095957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161090f575b5050505050905060003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16036109be5760019050610a36565b60005b600054811015610a34573373ffffffffffffffffffffffffffffffffffffffff168382815181106109f5576109f4611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610a215760019150610a34565b8080610a2c90611786565b9150506109c1565b505b80610a6d576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff1615610ab4576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151503610b3e576040517f3b4b7dcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f26c25af05520e978d353f976c99fa4c277ddc75aed4170ec47c9e24f06e62a1c600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101604051610c60929190611867565b60405180910390a25050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6005602052806000526040600020600091509050806000018054610cb7906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce3906116f7565b8015610d305780601f10610d0557610100808354040283529160200191610d30565b820191906000526020600020905b815481529060010190602001808311610d1357829003601f168201915b505050505090806001018054610d45906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d71906116f7565b8015610dbe5780601f10610d9357610100808354040283529160200191610dbe565b820191906000526020600020905b815481529060010190602001808311610da157829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60606003805480602002602001604051908101604052809291908181526020018280548015610e7257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e28575b5050505050905090565b60008054905090565b60006003805480602002602001604051908101604052809291908181526020018280548015610f0957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ebf575b5050505050905060003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1603610f6e5760019050610fe6565b60005b600054811015610fe4573373ffffffffffffffffffffffffffffffffffffffff16838281518110610fa557610fa4611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610fd15760019150610fe4565b8080610fdc90611786565b915050610f71565b505b8061101d576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff1615611064576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060038054806020026020016040519081016040528092919081815260200182805480156110e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161109e575b5050505050905060005b6000548110156111b357600015156006600084848151811061111757611116611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036111a0576040517fadba427200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806111ab90611786565b9150506110f2565b506001600460006101000a81548160ff0219169083151502179055507f77b99c173854235e0f45948e541b3d590e15d05c680efbedc9c18bcb845aa01c60405160405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b838110156112eb5780820151818401526020810190506112d0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611313826112b1565b61131d81856112bc565b935061132d8185602086016112cd565b611336816112f7565b840191505092915050565b6000602082019050818103600083015261135b8184611308565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139382611368565b9050919050565b6113a381611388565b81146113ae57600080fd5b50565b6000813590506113c08161139a565b92915050565b6000602082840312156113dc576113db611363565b5b60006113ea848285016113b1565b91505092915050565b60008115159050919050565b611408816113f3565b82525050565b600060208201905061142360008301846113ff565b92915050565b6000819050919050565b61143c81611429565b811461144757600080fd5b50565b60008135905061145981611433565b92915050565b60006020828403121561147557611474611363565b5b60006114838482850161144a565b91505092915050565b61149581611388565b82525050565b60006020820190506114b0600083018461148c565b92915050565b6114bf81611429565b82525050565b60006020820190506114da60008301846114b6565b92915050565b600082825260208201905092915050565b60006114fc826112b1565b61150681856114e0565b93506115168185602086016112cd565b61151f816112f7565b840191505092915050565b61153381611388565b82525050565b6000606083016000830151848203600086015261155682826114f1565b9150506020830151848203602086015261157082826114f1565b9150506040830151611585604086018261152a565b508091505092915050565b600060208201905081810360008301526115aa8184611539565b905092915050565b600060608201905081810360008301526115cc8186611308565b905081810360208301526115e08185611308565b90506115ef604083018461148c565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061162f838361152a565b60208301905092915050565b6000602082019050919050565b6000611653826115f7565b61165d8185611602565b935061166883611613565b8060005b838110156116995781516116808882611623565b975061168b8361163b565b92505060018101905061166c565b5085935050505092915050565b600060208201905081810360008301526116c08184611648565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061170f57607f821691505b602082108103611722576117216116c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179182611429565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117c3576117c2611757565b5b600182019050919050565b60008190508160005260206000209050919050565b600081546117f0816116f7565b6117fa81866112bc565b94506001821660008114611815576001811461182b5761185e565b60ff19831686528115156020028601935061185e565b611834856117ce565b60005b8381101561185657815481890152600182019150602081019050611837565b808801955050505b50505092915050565b6000604082019050818103600083015261188181856117e3565b9050818103602083015261189581846117e3565b9050939250505056fea2646970667358221220d336e4fc12c658ed5353b0d105add57594bfeb819c8933a20c28fae25f3a1e0064736f6c63430008110033a2646970667358221220b9b960d95a4e2df58468a786da7ea5063d1ce37092fe59af7f64b798b62bcf3964736f6c63430008110033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000525760003560e01c80634784336f146200005757806386605062146200008d578063d210fee314620000c3578063da9f385e14620000f9575b600080fd5b6200007560048036038101906200006f9190620007da565b6200012f565b60405162000084919062000827565b60405180910390f35b620000ab6004803603810190620000a5919062000b78565b6200017a565b604051620000ba919062000cac565b60405180910390f35b620000e16004803603810190620000db9190620007da565b62000636565b604051620000f0919062000df1565b60405180910390f35b62000117600480360381019062000111919062000e46565b62000704565b60405162000126919062000e9e565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b60008086511180156200018e575060008551115b80156200019c575060008451115b8015620001aa575060008251115b620001e1576040517fb0bac3b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518251148015620001f4575083518251145b6200022b576040517f21938d4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015620003b957600060018262000249919062000eea565b90505b8351811015620003a2578381815181106200026c576200026b62000f25565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16848381518110620002a0576200029f62000f25565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161480620003545750848181518110620002dc57620002db62000f25565b5b6020026020010151604051602001620002f6919062000fcd565b6040516020818303038152906040528051906020012085838151811062000322576200032162000f25565b5b60200260200101516040516020016200033c919062000fcd565b60405160208183030381529060405280519060200120145b156200038c576040517f301cd94e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080620003999062000fe6565b9150506200024c565b508080620003b09062000fe6565b9150506200022e565b50604686511115620003f7576040517f21938d4e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000859050600681511162000438576040517f7f916f4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8151811015620004d25760008282815181106200045d576200045c62000f25565b5b602001015160f81c60f81b60f81c60ff166001901b6f07ffeffe07ff7dfe03fe0000000000001611620004bc576040517f7f916f4900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080620004c99062000fe6565b9150506200043b565b506000338888888888604051620004e99062000753565b620004fa9695949392919062001264565b604051809103906000f08015801562000517573d6000803e3d6000fd5b5090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7218ecb1d60a4ca32226db62922bd3917372e8801cddba0cc86fffd285ff74428a8a8a8a8a60405162000620959493929190620012f4565b60405180910390a3809250505095945050505050565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620006f857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311620006ad575b50505050509050919050565b600060205281600052604060002081815481106200072157600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612566806200137583390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620007a28262000775565b9050919050565b620007b48162000795565b8114620007c057600080fd5b50565b600081359050620007d481620007a9565b92915050565b600060208284031215620007f357620007f26200076b565b5b60006200080384828501620007c3565b91505092915050565b6000819050919050565b62000821816200080c565b82525050565b60006020820190506200083e600083018462000816565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000899826200084e565b810181811067ffffffffffffffff82111715620008bb57620008ba6200085f565b5b80604052505050565b6000620008d062000761565b9050620008de82826200088e565b919050565b600067ffffffffffffffff8211156200090157620009006200085f565b5b6200090c826200084e565b9050602081019050919050565b82818337600083830152505050565b60006200093f6200093984620008e3565b620008c4565b9050828152602081018484840111156200095e576200095d62000849565b5b6200096b84828562000919565b509392505050565b600082601f8301126200098b576200098a62000844565b5b81356200099d84826020860162000928565b91505092915050565b600067ffffffffffffffff821115620009c457620009c36200085f565b5b602082029050602081019050919050565b600080fd5b6000620009f1620009eb84620009a6565b620008c4565b9050808382526020820190506020840283018581111562000a175762000a16620009d5565b5b835b8181101562000a6557803567ffffffffffffffff81111562000a405762000a3f62000844565b5b80860162000a4f898262000973565b8552602085019450505060208101905062000a19565b5050509392505050565b600082601f83011262000a875762000a8662000844565b5b813562000a99848260208601620009da565b91505092915050565b600067ffffffffffffffff82111562000ac05762000abf6200085f565b5b602082029050602081019050919050565b600062000ae862000ae28462000aa2565b620008c4565b9050808382526020820190506020840283018581111562000b0e5762000b0d620009d5565b5b835b8181101562000b3b578062000b268882620007c3565b84526020840193505060208101905062000b10565b5050509392505050565b600082601f83011262000b5d5762000b5c62000844565b5b813562000b6f84826020860162000ad1565b91505092915050565b600080600080600060a0868803121562000b975762000b966200076b565b5b600086013567ffffffffffffffff81111562000bb85762000bb762000770565b5b62000bc68882890162000973565b955050602086013567ffffffffffffffff81111562000bea5762000be962000770565b5b62000bf88882890162000973565b945050604086013567ffffffffffffffff81111562000c1c5762000c1b62000770565b5b62000c2a8882890162000a6f565b935050606086013567ffffffffffffffff81111562000c4e5762000c4d62000770565b5b62000c5c8882890162000a6f565b925050608086013567ffffffffffffffff81111562000c805762000c7f62000770565b5b62000c8e8882890162000b45565b9150509295509295909350565b62000ca68162000795565b82525050565b600060208201905062000cc3600083018462000c9b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b600062000d2062000d1a62000d148462000775565b62000cf5565b62000775565b9050919050565b600062000d348262000cff565b9050919050565b600062000d488262000d27565b9050919050565b62000d5a8162000d3b565b82525050565b600062000d6e838362000d4f565b60208301905092915050565b6000602082019050919050565b600062000d948262000cc9565b62000da0818562000cd4565b935062000dad8362000ce5565b8060005b8381101562000de457815162000dc8888262000d60565b975062000dd58362000d7a565b92505060018101905062000db1565b5085935050505092915050565b6000602082019050818103600083015262000e0d818462000d87565b905092915050565b62000e20816200080c565b811462000e2c57600080fd5b50565b60008135905062000e408162000e15565b92915050565b6000806040838503121562000e605762000e5f6200076b565b5b600062000e7085828601620007c3565b925050602062000e838582860162000e2f565b9150509250929050565b62000e988162000d3b565b82525050565b600060208201905062000eb5600083018462000e8d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000ef7826200080c565b915062000f04836200080c565b925082820190508082111562000f1f5762000f1e62000ebb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101562000f8a57808201518184015260208101905062000f6d565b60008484015250505050565b600062000fa38262000f54565b62000faf818562000f5f565b935062000fc181856020860162000f6a565b80840191505092915050565b600062000fdb828462000f96565b915081905092915050565b600062000ff3826200080c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001028576200102762000ebb565b5b600182019050919050565b600082825260208201905092915050565b6000620010518262000f54565b6200105d818562001033565b93506200106f81856020860162000f6a565b6200107a816200084e565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000620010cf8262000f54565b620010db8185620010b1565b9350620010ed81856020860162000f6a565b620010f8816200084e565b840191505092915050565b6000620011118383620010c2565b905092915050565b6000602082019050919050565b6000620011338262001085565b6200113f818562001090565b9350836020820285016200115385620010a1565b8060005b8581101562001195578484038952815162001173858262001103565b9450620011808362001119565b925060208a0199505060018101905062001157565b50829750879550505050505092915050565b600081519050919050565b6000819050602082019050919050565b620011cd8162000795565b82525050565b6000620011e18383620011c2565b60208301905092915050565b6000602082019050919050565b60006200120782620011a7565b62001213818562000cd4565b93506200122083620011b2565b8060005b83811015620012575781516200123b8882620011d3565b97506200124883620011ed565b92505060018101905062001224565b5085935050505092915050565b600060c0820190506200127b600083018962000c9b565b81810360208301526200128f818862001044565b90508181036040830152620012a5818762001044565b90508181036060830152620012bb818662001126565b90508181036080830152620012d1818562001126565b905081810360a0830152620012e78184620011fa565b9050979650505050505050565b600060a082019050818103600083015262001310818862001044565b9050818103602083015262001326818762001044565b905081810360408301526200133c818662001126565b9050818103606083015262001352818562001126565b90508181036080830152620013688184620011fa565b9050969550505050505056fe60a06040526000600460006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162002566380380620025668339818101604052810190620000529190620006c0565b8573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050846001908162000097919062000a42565b508360029081620000a9919062000a42565b50805160008190555060005b81518110156200013f5762000129848281518110620000d957620000d862000b29565b5b6020026020010151848381518110620000f757620000f662000b29565b5b602002602001015184848151811062000115576200011462000b29565b5b60200260200101516200014c60201b60201c565b8080620001369062000b87565b915050620000b5565b5050505050505062000c61565b600060405180606001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250905080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081620001d8919062000a42565b506020820151816001019081620001f0919062000a42565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fd76352dcc1f8336c0abdec06ee73330eee3e75ba620ba2c87510a25a32439d4e8585604051620002e892919062000c26565b60405180910390a250505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000337826200030a565b9050919050565b62000349816200032a565b81146200035557600080fd5b50565b60008151905062000369816200033e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003c48262000379565b810181811067ffffffffffffffff82111715620003e657620003e56200038a565b5b80604052505050565b6000620003fb620002f6565b9050620004098282620003b9565b919050565b600067ffffffffffffffff8211156200042c576200042b6200038a565b5b620004378262000379565b9050602081019050919050565b60005b838110156200046457808201518184015260208101905062000447565b60008484015250505050565b60006200048762000481846200040e565b620003ef565b905082815260208101848484011115620004a657620004a562000374565b5b620004b384828562000444565b509392505050565b600082601f830112620004d357620004d26200036f565b5b8151620004e584826020860162000470565b91505092915050565b600067ffffffffffffffff8211156200050c576200050b6200038a565b5b602082029050602081019050919050565b600080fd5b6000620005396200053384620004ee565b620003ef565b905080838252602082019050602084028301858111156200055f576200055e6200051d565b5b835b81811015620005ad57805167ffffffffffffffff8111156200058857620005876200036f565b5b808601620005978982620004bb565b8552602085019450505060208101905062000561565b5050509392505050565b600082601f830112620005cf57620005ce6200036f565b5b8151620005e184826020860162000522565b91505092915050565b600067ffffffffffffffff8211156200060857620006076200038a565b5b602082029050602081019050919050565b6000620006306200062a84620005ea565b620003ef565b905080838252602082019050602084028301858111156200065657620006556200051d565b5b835b818110156200068357806200066e888262000358565b84526020840193505060208101905062000658565b5050509392505050565b600082601f830112620006a557620006a46200036f565b5b8151620006b784826020860162000619565b91505092915050565b60008060008060008060c08789031215620006e057620006df62000300565b5b6000620006f089828a0162000358565b965050602087015167ffffffffffffffff81111562000714576200071362000305565b5b6200072289828a01620004bb565b955050604087015167ffffffffffffffff81111562000746576200074562000305565b5b6200075489828a01620004bb565b945050606087015167ffffffffffffffff81111562000778576200077762000305565b5b6200078689828a01620005b7565b935050608087015167ffffffffffffffff811115620007aa57620007a962000305565b5b620007b889828a01620005b7565b92505060a087015167ffffffffffffffff811115620007dc57620007db62000305565b5b620007ea89828a016200068d565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200084a57607f821691505b60208210810362000860576200085f62000802565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008ca7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200088b565b620008d686836200088b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620009236200091d6200091784620008ee565b620008f8565b620008ee565b9050919050565b6000819050919050565b6200093f8362000902565b620009576200094e826200092a565b84845462000898565b825550505050565b600090565b6200096e6200095f565b6200097b81848462000934565b505050565b5b81811015620009a3576200099760008262000964565b60018101905062000981565b5050565b601f821115620009f257620009bc8162000866565b620009c7846200087b565b81016020851015620009d7578190505b620009ef620009e6856200087b565b83018262000980565b50505b505050565b600082821c905092915050565b600062000a1760001984600802620009f7565b1980831691505092915050565b600062000a32838362000a04565b9150826002028217905092915050565b62000a4d82620007f7565b67ffffffffffffffff81111562000a695762000a686200038a565b5b62000a75825462000831565b62000a82828285620009a7565b600060209050601f83116001811462000aba576000841562000aa5578287015190505b62000ab1858262000a24565b86555062000b21565b601f19841662000aca8662000866565b60005b8281101562000af45784890151825560018201915060208501945060208101905062000acd565b8683101562000b14578489015162000b10601f89168262000a04565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000b9482620008ee565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000bc95762000bc862000b58565b5b600182019050919050565b600082825260208201905092915050565b600062000bf282620007f7565b62000bfe818562000bd4565b935062000c1081856020860162000444565b62000c1b8162000379565b840191505092915050565b6000604082019050818103600083015262000c42818562000be5565b9050818103602083015262000c58818462000be5565b90509392505050565b6080516118d462000c926000396000818161097b01528181610c7001528181610f2b015261120201526118d46000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806375e57251116100a2578063a7d136a811610071578063a7d136a8146102d7578063ad605729146102f5578063d678132414610313578063dba6335f1461031d578063ee9706ac1461033b57610116565b806375e572511461025f5780637b560fc21461027d578063893d20e81461028757806392be02d8146102a557610116565b8063384786d6116100e9578063384786d6146101b757806353d54866146101d557806363cf7ce2146101f357806364fb931b146102115780637143059f1461022f57610116565b80630cc375281461011b57806317d7de7c146101395780633683b583146101575780633686b77814610187575b600080fd5b61012361036b565b6040516101309190611341565b60405180910390f35b6101416103f9565b60405161014e9190611341565b60405180910390f35b610171600480360381019061016c91906113c6565b61048b565b60405161017e919061140e565b60405180910390f35b6101a1600480360381019061019c919061145f565b6104ab565b6040516101ae919061149b565b60405180910390f35b6101bf6104ea565b6040516101cc919061140e565b60405180910390f35b6101dd6104fd565b6040516101ea91906114c5565b60405180910390f35b6101fb610503565b6040516102089190611341565b60405180910390f35b610219610595565b604051610226919061140e565b60405180910390f35b610249600480360381019061024491906113c6565b6105ac565b6040516102569190611590565b60405180910390f35b610267610847565b6040516102749190611341565b60405180910390f35b6102856108d5565b005b61028f610c6c565b60405161029c919061149b565b60405180910390f35b6102bf60048036038101906102ba91906113c6565b610c94565b6040516102ce939291906115b2565b60405180910390f35b6102df610dee565b6040516102ec91906116a6565b60405180910390f35b6102fd610e7c565b60405161030a91906114c5565b60405180910390f35b61031b610e85565b005b610325611200565b604051610332919061149b565b60405180910390f35b610355600480360381019061035091906113c6565b611224565b604051610362919061140e565b60405180910390f35b60018054610378906116f7565b80601f01602080910402602001604051908101604052809291908181526020018280546103a4906116f7565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b505050505081565b606060018054610408906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610434906116f7565b80156104815780601f1061045657610100808354040283529160200191610481565b820191906000526020600020905b81548152906001019060200180831161046457829003601f168201915b5050505050905090565b60066020528060005260406000206000915054906101000a900460ff1681565b600381815481106104bb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900460ff1681565b60005481565b606060028054610512906116f7565b80601f016020809104026020016040519081016040528092919081815260200182805461053e906116f7565b801561058b5780601f106105605761010080835404028352916020019161058b565b820191906000526020600020905b81548152906001019060200180831161056e57829003601f168201915b5050505050905090565b6000600460009054906101000a900460ff16905090565b6105b461127a565b600073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361067c576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546106d6906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610702906116f7565b801561074f5780601f106107245761010080835404028352916020019161074f565b820191906000526020600020905b81548152906001019060200180831161073257829003601f168201915b50505050508152602001600182018054610768906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610794906116f7565b80156107e15780601f106107b6576101008083540402835291602001916107e1565b820191906000526020600020905b8154815290600101906020018083116107c457829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60028054610854906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610880906116f7565b80156108cd5780601f106108a2576101008083540402835291602001916108cd565b820191906000526020600020905b8154815290600101906020018083116108b057829003601f168201915b505050505081565b6000600380548060200260200160405190810160405280929190818152602001828054801561095957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161090f575b5050505050905060003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16036109be5760019050610a36565b60005b600054811015610a34573373ffffffffffffffffffffffffffffffffffffffff168382815181106109f5576109f4611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610a215760019150610a34565b8080610a2c90611786565b9150506109c1565b505b80610a6d576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff1615610ab4576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151503610b3e576040517f3b4b7dcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f26c25af05520e978d353f976c99fa4c277ddc75aed4170ec47c9e24f06e62a1c600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101604051610c60929190611867565b60405180910390a25050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6005602052806000526040600020600091509050806000018054610cb7906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce3906116f7565b8015610d305780601f10610d0557610100808354040283529160200191610d30565b820191906000526020600020905b815481529060010190602001808311610d1357829003601f168201915b505050505090806001018054610d45906116f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d71906116f7565b8015610dbe5780601f10610d9357610100808354040283529160200191610dbe565b820191906000526020600020905b815481529060010190602001808311610da157829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60606003805480602002602001604051908101604052809291908181526020018280548015610e7257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e28575b5050505050905090565b60008054905090565b60006003805480602002602001604051908101604052809291908181526020018280548015610f0957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ebf575b5050505050905060003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1603610f6e5760019050610fe6565b60005b600054811015610fe4573373ffffffffffffffffffffffffffffffffffffffff16838281518110610fa557610fa4611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610fd15760019150610fe4565b8080610fdc90611786565b915050610f71565b505b8061101d576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff1615611064576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060038054806020026020016040519081016040528092919081815260200182805480156110e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161109e575b5050505050905060005b6000548110156111b357600015156006600084848151811061111757611116611728565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036111a0576040517fadba427200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806111ab90611786565b9150506110f2565b506001600460006101000a81548160ff0219169083151502179055507f77b99c173854235e0f45948e541b3d590e15d05c680efbedc9c18bcb845aa01c60405160405180910390a1505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b838110156112eb5780820151818401526020810190506112d0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611313826112b1565b61131d81856112bc565b935061132d8185602086016112cd565b611336816112f7565b840191505092915050565b6000602082019050818103600083015261135b8184611308565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139382611368565b9050919050565b6113a381611388565b81146113ae57600080fd5b50565b6000813590506113c08161139a565b92915050565b6000602082840312156113dc576113db611363565b5b60006113ea848285016113b1565b91505092915050565b60008115159050919050565b611408816113f3565b82525050565b600060208201905061142360008301846113ff565b92915050565b6000819050919050565b61143c81611429565b811461144757600080fd5b50565b60008135905061145981611433565b92915050565b60006020828403121561147557611474611363565b5b60006114838482850161144a565b91505092915050565b61149581611388565b82525050565b60006020820190506114b0600083018461148c565b92915050565b6114bf81611429565b82525050565b60006020820190506114da60008301846114b6565b92915050565b600082825260208201905092915050565b60006114fc826112b1565b61150681856114e0565b93506115168185602086016112cd565b61151f816112f7565b840191505092915050565b61153381611388565b82525050565b6000606083016000830151848203600086015261155682826114f1565b9150506020830151848203602086015261157082826114f1565b9150506040830151611585604086018261152a565b508091505092915050565b600060208201905081810360008301526115aa8184611539565b905092915050565b600060608201905081810360008301526115cc8186611308565b905081810360208301526115e08185611308565b90506115ef604083018461148c565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061162f838361152a565b60208301905092915050565b6000602082019050919050565b6000611653826115f7565b61165d8185611602565b935061166883611613565b8060005b838110156116995781516116808882611623565b975061168b8361163b565b92505060018101905061166c565b5085935050505092915050565b600060208201905081810360008301526116c08184611648565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061170f57607f821691505b602082108103611722576117216116c8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061179182611429565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117c3576117c2611757565b5b600182019050919050565b60008190508160005260206000209050919050565b600081546117f0816116f7565b6117fa81866112bc565b94506001821660008114611815576001811461182b5761185e565b60ff19831686528115156020028601935061185e565b611834856117ce565b60005b8381101561185657815481890152600182019150602081019050611837565b808801955050505b50505092915050565b6000604082019050818103600083015261188181856117e3565b9050818103602083015261189581846117e3565b9050939250505056fea2646970667358221220d336e4fc12c658ed5353b0d105add57594bfeb819c8933a20c28fae25f3a1e0064736f6c63430008110033a2646970667358221220b9b960d95a4e2df58468a786da7ea5063d1ce37092fe59af7f64b798b62bcf3964736f6c63430008110033",
  "devdoc": {
    "author": "polarzero",
    "kind": "dev",
    "methods": {
      "createPromiseContract(string,string,string[],string[],address[])": {
        "params": {
          "_partyAddresses": "The addresses specified by the user that will be allowed to interact with the contract",
          "_partyNames": "The names of the parties specified by the user",
          "_partyTwitterHandles": "The Twitter handles of the parties specified by the user",
          "_pdfUri": "The URI of the PDF file stored on IPFS",
          "_promiseName": "The name of the contract specified by the user"
        }
      }
    },
    "title": "Master Contract",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "PromiseFactory__createPromiseContract__EMPTY_FIELD()": [
        {
          "notice": "Errors"
        }
      ]
    },
    "events": {
      "PromiseContractCreated(address,address,string,string,string[],string[],address[])": {
        "notice": "Events"
      }
    },
    "kind": "user",
    "methods": {
      "createPromiseContract(string,string,string[],string[],address[])": {
        "notice": "Create a new contract and add it to the list of child contracts"
      },
      "getPromiseContractAddresses(address)": {
        "notice": "Getters"
      }
    },
    "notice": "This is the master contract initializing & referencing all child contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 427,
        "contract": "contracts/PromiseFactory.sol:PromiseFactory",
        "label": "promiseContracts",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_array(t_contract(PromiseContract)407)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(PromiseContract)407)dyn_storage": {
        "base": "t_contract(PromiseContract)407",
        "encoding": "dynamic_array",
        "label": "contract PromiseContract[]",
        "numberOfBytes": "32"
      },
      "t_contract(PromiseContract)407": {
        "encoding": "inplace",
        "label": "contract PromiseContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_contract(PromiseContract)407)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract PromiseContract[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(PromiseContract)407)dyn_storage"
      }
    }
  }
}