{
  "address": "0x4dcE3Dce26914222B386f966E14Fd7661933f827",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__EMPTY_FIELD",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__INCORRECT_FIELD_LENGTH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__NOT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__NOT_VERIFIER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__addParticipant__ALREADY_PARTICIPANT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__addParticipant__NOT_PARTICIPANT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__addTwitterVerifiedUser__ALREADY_VERIFIED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PromiseFactory__createPromiseContract__DUPLICATE_FIELD",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_participantName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_participantTwitterHandle",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_participantAddress",
          "type": "address"
        }
      ],
      "name": "ParticipantAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_promiseName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_ipfsCid",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_partyNames",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "_partyTwitterHandles",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "_partyAddresses",
          "type": "address[]"
        }
      ],
      "name": "PromiseContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitterHandle",
          "type": "string"
        }
      ],
      "name": "TwitterAddVerifiedFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_twitterHandle",
          "type": "string"
        }
      ],
      "name": "TwitterAddVerifiedSuccessful",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_promiseContractAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_partyName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_partyTwitterHandle",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_partyAddress",
          "type": "address"
        }
      ],
      "name": "addParticipant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_twitterHandle",
          "type": "string"
        }
      ],
      "name": "addTwitterVerifiedUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_promiseName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_ipfsCid",
          "type": "string"
        },
        {
          "internalType": "string[]",
          "name": "_partyNames",
          "type": "string[]"
        },
        {
          "internalType": "string[]",
          "name": "_partyTwitterHandles",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_partyAddresses",
          "type": "address[]"
        }
      ],
      "name": "createPromiseContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "promiseContractAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getPromiseContractAddresses",
      "outputs": [
        {
          "internalType": "contract PromiseContract[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getPromiseContractCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getTwitterVerifiedHandle",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVerifier",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verifier",
          "type": "address"
        }
      ],
      "name": "setVerifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x19f4a93effbfb73edf6400e9adb2e7401ce1822973c9e99cf088f19f3820ff99",
  "receipt": {
    "to": null,
    "from": "0xc06d127E504a944f63Bc750D8F512556c576F3EF",
    "contractAddress": "0x4dcE3Dce26914222B386f966E14Fd7661933f827",
    "transactionIndex": 18,
    "gasUsed": "4052217",
    "logsBloom": "0x
    "blockHash": "0x0a5fec2f924f2a10001d4d6440bad6e6148439e3a9a1ac8275248e98448262c8",
    "transactionHash": "0x19f4a93effbfb73edf6400e9adb2e7401ce1822973c9e99cf088f19f3820ff99",
    "logs": [
      {
        "transactionIndex": 18,
        "blockNumber": 28996780,
        "transactionHash": "0x19f4a93effbfb73edf6400e9adb2e7401ce1822973c9e99cf088f19f3820ff99",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000c06d127e504a944f63bc750d8f512556c576f3ef",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x000000000000000000000000000000000000000000000000001598347041b700000000000000000000000000000000000000000000000000149e1fb75a2fd2c00000000000000000000000000000000000000000000017561db5ead5bc2c9cbe00000000000000000000000000000000000000000000000014888782e9ee1bc00000000000000000000000000000000000000000000017561dcb830a2c6e53be",
        "logIndex": 65,
        "blockHash": "0x0a5fec2f924f2a10001d4d6440bad6e6148439e3a9a1ac8275248e98448262c8"
      }
    ],
    "blockNumber": 28996780,
    "cumulativeGasUsed": "7099029",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xf58A128C2052BaBb194C244e90395Ba3FDaae74f"
  ],
  "numDeployments": 8,
  "solcInputHash": "d52704746265baebf240bde2685fc757",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PromiseFactory__EMPTY_FIELD\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__INCORRECT_FIELD_LENGTH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__NOT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__NOT_VERIFIER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__addParticipant__ALREADY_PARTICIPANT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__addParticipant__NOT_PARTICIPANT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__addTwitterVerifiedUser__ALREADY_VERIFIED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PromiseFactory__createPromiseContract__DUPLICATE_FIELD\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_participantName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_participantTwitterHandle\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_participantAddress\",\"type\":\"address\"}],\"name\":\"ParticipantAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_promiseName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_ipfsCid\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_partyNames\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"_partyTwitterHandles\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_partyAddresses\",\"type\":\"address[]\"}],\"name\":\"PromiseContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitterHandle\",\"type\":\"string\"}],\"name\":\"TwitterAddVerifiedFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_twitterHandle\",\"type\":\"string\"}],\"name\":\"TwitterAddVerifiedSuccessful\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_promiseContractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_partyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_partyTwitterHandle\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_partyAddress\",\"type\":\"address\"}],\"name\":\"addParticipant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_twitterHandle\",\"type\":\"string\"}],\"name\":\"addTwitterVerifiedUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_promiseName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ipfsCid\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"_partyNames\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_partyTwitterHandles\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_partyAddresses\",\"type\":\"address[]\"}],\"name\":\"createPromiseContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"promiseContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getPromiseContractAddresses\",\"outputs\":[{\"internalType\":\"contract PromiseContract[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getPromiseContractCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getTwitterVerifiedHandle\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVerifier\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifier\",\"type\":\"address\"}],\"name\":\"setVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"polarzero\",\"kind\":\"dev\",\"methods\":{\"addParticipant(address,string,string,address)\":{\"details\":\"Only a participant of the contract can call this functionIt can only be called if the contract is not locked (the child contract takes care of that)\",\"params\":{\"_partyAddress\":\"The address of the party\",\"_partyName\":\"The name of the party\",\"_partyTwitterHandle\":\"The Twitter handle of the party\",\"_promiseContractAddress\":\"The address of the promise contract\"}},\"addTwitterVerifiedUser(address,string)\":{\"details\":\"Only the verifier contract can call this function, after the account has been verified with the Chainlink Node + External Adapter\",\"params\":{\"_twitterHandle\":\"The Twitter handle of the verified account\",\"_userAddress\":\"The address of the user\"}},\"createPromiseContract(string,string,string[],string[],address[])\":{\"params\":{\"_ipfsCid\":\"The CID of the directory stored on IPFS\",\"_partyAddresses\":\"The addresses specified by the user that will be allowed to interact with the contract\",\"_partyNames\":\"The names of the parties specified by the user\",\"_partyTwitterHandles\":\"The Twitter handles of the parties specified by the user\",\"_promiseName\":\"The name of the contract specified by the user\"}}},\"title\":\"Master Contract\",\"version\":1},\"userdoc\":{\"errors\":{\"PromiseFactory__EMPTY_FIELD()\":[{\"notice\":\"Errors\"}]},\"events\":{\"PromiseContractCreated(address,address,string,string,string[],string[],address[])\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"addParticipant(address,string,string,address)\":{\"notice\":\"Add a participant to a promise contract\"},\"addTwitterVerifiedUser(address,string)\":{\"notice\":\"Add a verified Twitter account to the list of verified accounts\"},\"constructor\":{\"notice\":\"Initialize the contract\"},\"createPromiseContract(string,string,string[],string[],address[])\":{\"notice\":\"Create a new contract and add it to the list of child contracts\"},\"getPromiseContractAddresses(address)\":{\"notice\":\"Getters\"},\"setVerifier(address)\":{\"notice\":\"Setters\"}},\"notice\":\"This is the master contract initializing & referencing all child contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PromiseFactory.sol\":\"PromiseFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PromiseContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\n/**\\n * @author polarzero\\n * @title Promise Contract\\n * @notice This is the child contract generated by the Promise Factory\\n * once a user creates a new promise\\n */\\n\\ncontract PromiseContract {\\n    /// Errors\\n    error PromiseContract__NOT_FACTORY();\\n    error PromiseContract__NOT_PARTICIPANT();\\n    error PromiseContract__PROMISE_LOCKED();\\n    error PromiseContract__approvePromise__ALREADY_APPROVED();\\n    error PromiseContract__lockPromise__PARTICIPANT_NOT_APPROVED();\\n\\n    /// Types\\n    struct Participant {\\n        string participantName;\\n        string participantTwitterHandle;\\n        address participantAddress;\\n    }\\n\\n    /// Variables\\n    uint256 private s_participantCount;\\n    string private s_promiseName;\\n    string private s_ipfsCid;\\n    address private immutable i_owner;\\n    address private immutable i_promiseFactoryContract;\\n    address[] private s_participantAddresses;\\n    bool private s_promiseLocked = false;\\n\\n    // Mapping of addresses to name & twitter handle\\n    mapping(address => Participant) private s_parties;\\n    // Mapping of addresses to whether or not they have approved the agreement\\n    mapping(address => bool) private s_approvedParties;\\n\\n    /// Events\\n    event ParticipantCreated(\\n        string participantName,\\n        string participantTwitterHandle,\\n        address indexed participantAddress\\n    );\\n\\n    event ParticipantApproved(\\n        string participantName,\\n        string participantTwitterHandle,\\n        address indexed participantAddress\\n    );\\n\\n    event PromiseLocked();\\n\\n    /// Modifiers\\n    modifier onlyParticipant() {\\n        bool isParticipant = getIsParticipant(msg.sender);\\n\\n        if (!isParticipant) revert PromiseContract__NOT_PARTICIPANT();\\n        _;\\n    }\\n\\n    modifier onlyUnlocked() {\\n        if (s_promiseLocked) revert PromiseContract__PROMISE_LOCKED();\\n        _;\\n    }\\n\\n    modifier onlyPromiseFactory() {\\n        if (msg.sender != i_promiseFactoryContract)\\n            revert PromiseContract__NOT_FACTORY();\\n        _;\\n    }\\n\\n    /// Functions\\n    /**\\n     * @dev Initialize the contract from the Master Contract with the user address as the owner\\n     */\\n\\n    constructor(\\n        address _owner,\\n        string memory _promiseName,\\n        string memory _ipfsCid,\\n        string[] memory _partyNames,\\n        string[] memory _partyTwitterHandles,\\n        address[] memory _partyAddresses\\n    ) {\\n        i_promiseFactoryContract = msg.sender;\\n        i_owner = _owner;\\n        s_promiseName = _promiseName;\\n        s_ipfsCid = _ipfsCid;\\n        s_participantCount = _partyAddresses.length;\\n\\n        for (uint256 i = 0; i < _partyAddresses.length; i++) {\\n            createParticipant(\\n                _partyNames[i],\\n                _partyTwitterHandles[i],\\n                _partyAddresses[i]\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @notice Approve the promise as a participant\\n     */\\n\\n    function approvePromise() public onlyParticipant onlyUnlocked {\\n        if (s_approvedParties[msg.sender] == true) {\\n            revert PromiseContract__approvePromise__ALREADY_APPROVED();\\n        }\\n\\n        s_approvedParties[msg.sender] = true;\\n        emit ParticipantApproved(\\n            s_parties[msg.sender].participantName,\\n            s_parties[msg.sender].participantTwitterHandle,\\n            msg.sender\\n        );\\n    }\\n\\n    /**\\n     * @notice Validate the promise and lock it so that no more participants can change any state\\n     * or even try to and lose gas\\n     */\\n\\n    function lockPromise() public onlyParticipant onlyUnlocked {\\n        address[] memory participantAddresses = s_participantAddresses;\\n\\n        // Loop through the parties and check if anyone has not approved yet\\n        for (uint256 i = 0; i < s_participantCount; i++) {\\n            if (s_approvedParties[participantAddresses[i]] == false) {\\n                revert PromiseContract__lockPromise__PARTICIPANT_NOT_APPROVED();\\n            }\\n        }\\n\\n        s_promiseLocked = true;\\n        emit PromiseLocked();\\n    }\\n\\n    /**\\n     * @notice Create a new participant and add them to the mapping\\n     * @dev This function can only be called by the Promise Factory\\n     * @param _participantName The name of the participant\\n     * @param _participantTwitterHandle The twitter handle of the participant\\n     * @param _participantAddress The address of the participant\\n     */\\n\\n    function createParticipant(\\n        string memory _participantName,\\n        string memory _participantTwitterHandle,\\n        address _participantAddress\\n    ) public onlyPromiseFactory onlyUnlocked {\\n        Participant memory participant = Participant(\\n            _participantName,\\n            _participantTwitterHandle,\\n            _participantAddress\\n        );\\n        s_parties[_participantAddress] = participant;\\n        s_participantAddresses.push(_participantAddress);\\n\\n        emit ParticipantCreated(\\n            _participantName,\\n            _participantTwitterHandle,\\n            _participantAddress\\n        );\\n    }\\n\\n    /// Getters\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getName() public view returns (string memory) {\\n        return s_promiseName;\\n    }\\n\\n    function getIpfsCid() public view returns (string memory) {\\n        return s_ipfsCid;\\n    }\\n\\n    function getParticipant(address _address)\\n        public\\n        view\\n        returns (Participant memory)\\n    {\\n        return s_parties[_address];\\n    }\\n\\n    function getIsParticipant(address _participantAddress)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        if (s_parties[_participantAddress].participantAddress == address(0)) {\\n            return false;\\n        }\\n\\n        return true;\\n    }\\n\\n    function getParticipantCount() public view returns (uint256) {\\n        return s_participantCount;\\n    }\\n\\n    function getIsPromiseApproved(address _participantAddress)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        return s_approvedParties[_participantAddress];\\n    }\\n\\n    function getIsPromiseLocked() public view returns (bool) {\\n        return s_promiseLocked;\\n    }\\n\\n    function getPromiseFactoryContract() public view returns (address) {\\n        return i_promiseFactoryContract;\\n    }\\n}\\n\",\"keccak256\":\"0x8e282678dd98a286fbe22e811a8cdb2f600f800c22bd4ed8768a869661e4b213\",\"license\":\"MIT\"},\"contracts/PromiseFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.16;\\n\\nimport \\\"./PromiseContract.sol\\\";\\n\\n/**\\n * @author polarzero\\n * @title Master Contract\\n * @notice This is the master contract initializing & referencing all child contracts\\n */\\n\\ncontract PromiseFactory {\\n    /// Errors\\n    error PromiseFactory__EMPTY_FIELD();\\n    error PromiseFactory__INCORRECT_FIELD_LENGTH();\\n    error PromiseFactory__createPromiseContract__DUPLICATE_FIELD();\\n    error PromiseFactory__addParticipant__NOT_PARTICIPANT();\\n    error PromiseFactory__addParticipant__ALREADY_PARTICIPANT();\\n    error PromiseFactory__addTwitterVerifiedUser__ALREADY_VERIFIED();\\n    error PromiseFactory__NOT_OWNER();\\n    error PromiseFactory__NOT_VERIFIER();\\n\\n    /// Variables\\n    address private immutable i_owner;\\n    // The VerifyTwitter contract\\n    address private s_verifier;\\n\\n    // Map the owner addresses to the child contracts they created\\n    mapping(address => PromiseContract[]) private s_promiseContracts;\\n\\n    // Map the user addresses to their verified Twitter account(s)\\n    mapping(address => string[]) private s_twitterVerifiedUsers;\\n\\n    /// Events\\n    event PromiseContractCreated(\\n        address indexed _owner,\\n        address indexed _contractAddress,\\n        string _promiseName,\\n        string _ipfsCid,\\n        string[] _partyNames,\\n        string[] _partyTwitterHandles,\\n        address[] _partyAddresses\\n    );\\n\\n    event TwitterAddVerifiedSuccessful(\\n        address indexed _owner,\\n        string _twitterHandle\\n    );\\n\\n    event TwitterAddVerifiedFailed(\\n        address indexed _owner,\\n        string _twitterHandle\\n    );\\n\\n    event ParticipantAdded(\\n        address indexed _contractAddress,\\n        string _participantName,\\n        string _participantTwitterHandle,\\n        address _participantAddress\\n    );\\n\\n    /// Modifiers\\n    modifier onlyOwner() {\\n        // msg sender should be the deployer of the contract\\n        if (msg.sender != i_owner) {\\n            revert PromiseFactory__NOT_OWNER();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyVerifier() {\\n        if (msg.sender != s_verifier) {\\n            revert PromiseFactory__NOT_VERIFIER();\\n        }\\n        _;\\n    }\\n\\n    /// Functions\\n\\n    /**\\n     * @notice Initialize the contract\\n     */\\n\\n    constructor(address _verifier) {\\n        i_owner = msg.sender;\\n        s_verifier = _verifier;\\n    }\\n\\n    /**\\n     * @notice Create a new contract and add it to the list of child contracts\\n     * @param _promiseName The name of the contract specified by the user\\n     * @param _ipfsCid The CID of the directory stored on IPFS\\n     * @param _partyNames The names of the parties specified by the user\\n     * @param _partyTwitterHandles The Twitter handles of the parties specified by the user\\n     * @param _partyAddresses The addresses specified by the user that will be allowed to interact\\n     * with the contract\\n     */\\n\\n    function createPromiseContract(\\n        string memory _promiseName,\\n        string memory _ipfsCid,\\n        string[] memory _partyNames,\\n        string[] memory _partyTwitterHandles,\\n        address[] memory _partyAddresses\\n    ) public returns (address promiseContractAddress) {\\n        // Revert if one of the fields is empty\\n        if (\\n            !(bytes(_promiseName).length > 0 &&\\n                bytes(_ipfsCid).length > 0 &&\\n                _partyNames.length > 0 &&\\n                _partyTwitterHandles.length > 0 &&\\n                _partyAddresses.length > 0)\\n        ) revert PromiseFactory__EMPTY_FIELD();\\n\\n        // Revert if the number of names, Twitter and addresses are not equal\\n        // If Twitter handles are not provided, it will pass an empty string\\n        if (\\n            !(_partyAddresses.length == _partyTwitterHandles.length &&\\n                _partyAddresses.length == _partyNames.length)\\n        ) revert PromiseFactory__INCORRECT_FIELD_LENGTH();\\n\\n        // Revert if the same address or twitter handle is used twice\\n        for (uint256 i = 0; i < _partyAddresses.length; i++) {\\n            for (uint256 j = i + 1; j < _partyAddresses.length; j++) {\\n                if (\\n                    _partyAddresses[i] == _partyAddresses[j] ||\\n                    keccak256(abi.encodePacked(_partyTwitterHandles[i])) ==\\n                    keccak256(abi.encodePacked(_partyTwitterHandles[j]))\\n                )\\n                    revert PromiseFactory__createPromiseContract__DUPLICATE_FIELD();\\n            }\\n        }\\n\\n        // We could test the validity of the Twitter handles here, but it would not really matter\\n        // since it won't have any value without being verified, and the verification already\\n        // needs it to be valid\\n\\n        // Revert if the name of the promise is longer than 70 characters\\n        if (bytes(_promiseName).length > 70) {\\n            revert PromiseFactory__INCORRECT_FIELD_LENGTH();\\n        }\\n        // Same for any of the party names but 30 characters\\n        for (uint256 i = 0; i < _partyNames.length; i++) {\\n            if (bytes(_partyNames[i]).length > 30) {\\n                revert PromiseFactory__INCORRECT_FIELD_LENGTH();\\n            }\\n        }\\n        // We don't need to check the length of the Twitter handles\\n        // If any were to be invalid, they would fail to get verified\\n\\n        // We can't make sure the provided CID is valid,\\n        // because it could be provided either in a Base58 or Base32 format\\n        // but it will be shown in the UI\\n\\n        // Create a new contract for this promise\\n        PromiseContract promiseContract = new PromiseContract(\\n            msg.sender,\\n            _promiseName,\\n            _ipfsCid,\\n            _partyNames,\\n            _partyTwitterHandles,\\n            _partyAddresses\\n        );\\n        s_promiseContracts[msg.sender].push(promiseContract);\\n\\n        emit PromiseContractCreated(\\n            msg.sender,\\n            address(promiseContract),\\n            _promiseName,\\n            _ipfsCid,\\n            _partyNames,\\n            _partyTwitterHandles,\\n            _partyAddresses\\n        );\\n\\n        return address(promiseContract);\\n    }\\n\\n    /**\\n     * @notice Add a verified Twitter account to the list of verified accounts\\n     * @dev Only the verifier contract can call this function, after the account\\n     * has been verified with the Chainlink Node + External Adapter\\n     * @param _userAddress The address of the user\\n     * @param _twitterHandle The Twitter handle of the verified account\\n     */\\n\\n    function addTwitterVerifiedUser(\\n        address _userAddress,\\n        string memory _twitterHandle\\n    ) external onlyVerifier {\\n        // If the user address doesn't have a verified account yet, create a new array\\n        if (s_twitterVerifiedUsers[_userAddress].length == 0) {\\n            s_twitterVerifiedUsers[_userAddress] = new string[](1);\\n            // Add the verified account to the array\\n            s_twitterVerifiedUsers[_userAddress][0] = _twitterHandle;\\n        } else if (s_twitterVerifiedUsers[_userAddress].length > 0) {\\n            string[] memory verifiedAccounts = s_twitterVerifiedUsers[\\n                _userAddress\\n            ];\\n            for (uint256 i = 0; i < verifiedAccounts.length; i++) {\\n                // If the user already verified this account, revert\\n                if (\\n                    keccak256(abi.encodePacked(verifiedAccounts[i])) ==\\n                    keccak256(abi.encodePacked(_twitterHandle))\\n                ) {\\n                    revert PromiseFactory__addTwitterVerifiedUser__ALREADY_VERIFIED();\\n                }\\n            }\\n            // But if it is not included, add it\\n            s_twitterVerifiedUsers[_userAddress].push(_twitterHandle);\\n            emit TwitterAddVerifiedSuccessful(_userAddress, _twitterHandle);\\n        }\\n    }\\n\\n    /**\\n     * @notice Add a participant to a promise contract\\n     * @dev Only a participant of the contract can call this function\\n     * @dev It can only be called if the contract is not locked (the child contract takes care of that)\\n     * @param _promiseContractAddress The address of the promise contract\\n     * @param _partyName The name of the party\\n     * @param _partyTwitterHandle The Twitter handle of the party\\n     * @param _partyAddress The address of the party\\n     */\\n\\n    function addParticipant(\\n        address _promiseContractAddress,\\n        string memory _partyName,\\n        string memory _partyTwitterHandle,\\n        address _partyAddress\\n    ) public {\\n        // Revert if one of the fields is empty\\n        if (\\n            !(bytes(_partyName).length > 0 &&\\n                bytes(_partyTwitterHandle).length > 0)\\n        ) revert PromiseFactory__EMPTY_FIELD();\\n\\n        // Revert if the sender is not a participant of the contract\\n        if (\\n            !PromiseContract(_promiseContractAddress).getIsParticipant(\\n                msg.sender\\n            )\\n        ) {\\n            revert PromiseFactory__addParticipant__NOT_PARTICIPANT();\\n        }\\n\\n        // Revert if the user to add is already a participant of the contract\\n        if (\\n            PromiseContract(_promiseContractAddress).getIsParticipant(\\n                _partyAddress\\n            )\\n        ) {\\n            revert PromiseFactory__addParticipant__ALREADY_PARTICIPANT();\\n        }\\n\\n        // Revert if the name of the party is longer than 30 characters\\n        if (bytes(_partyName).length > 30) {\\n            revert PromiseFactory__INCORRECT_FIELD_LENGTH();\\n        }\\n\\n        // Add the participant to the contract and emit an event if successful\\n        PromiseContract(_promiseContractAddress).createParticipant(\\n            _partyName,\\n            _partyTwitterHandle,\\n            _partyAddress\\n        );\\n\\n        emit ParticipantAdded(\\n            _promiseContractAddress,\\n            _partyName,\\n            _partyTwitterHandle,\\n            _partyAddress\\n        );\\n    }\\n\\n    /// Setters\\n    function setVerifier(address _verifier) external onlyOwner {\\n        s_verifier = _verifier;\\n    }\\n\\n    /// Getters\\n    function getPromiseContractAddresses(address _owner)\\n        public\\n        view\\n        returns (PromiseContract[] memory)\\n    {\\n        return s_promiseContracts[_owner];\\n    }\\n\\n    function getPromiseContractCount(address _userAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_promiseContracts[_userAddress].length;\\n    }\\n\\n    function getTwitterVerifiedHandle(address _userAddress)\\n        public\\n        view\\n        returns (string[] memory)\\n    {\\n        // Return the username if the user has a verified account\\n        if (s_twitterVerifiedUsers[_userAddress].length > 0) {\\n            return s_twitterVerifiedUsers[_userAddress];\\n        } else {\\n            // Return an empty array\\n            string[] memory usernames = new string[](0);\\n            return usernames;\\n        }\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getVerifier() public view returns (address) {\\n        return s_verifier;\\n    }\\n}\\n\",\"keccak256\":\"0x6b6e8035df86ebf5716b78a30b091f50b0054f3435bfaf86c32b97ded61e110f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620049b2380380620049b283398181016040528101906200003791906200011c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e482620000b7565b9050919050565b620000f681620000d7565b81146200010257600080fd5b50565b6000815190506200011681620000eb565b92915050565b600060208284031215620001355762000134620000b2565b5b6000620001458482850162000105565b91505092915050565b608051614841620001716000396000818161029801526107cf01526148416000f3fe60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063893d20e8116200006f578063893d20e81462000153578063c4fd18641462000175578063d210fee31462000195578063d488f9a014620001cb578063e31db573146200020157620000a0565b806346657fe914620000a55780634784336f14620000c75780635437988d14620000fd57806386605062146200011d575b600080fd5b620000af62000221565b604051620000be919062001380565b60405180910390f35b620000e56004803603810190620000df9190620013e2565b6200024a565b604051620000f491906200142f565b60405180910390f35b6200011b6004803603810190620001159190620013e2565b62000296565b005b6200013b600480360381019062000135919062001780565b6200035f565b6040516200014a919062001380565b60405180910390f35b6200015d620007cb565b6040516200016c919062001380565b60405180910390f35b6200019360048036038101906200018d9190620018a3565b620007f3565b005b620001b36004803603810190620001ad9190620013e2565b62000ab4565b604051620001c2919062001a7b565b60405180910390f35b620001e96004803603810190620001e39190620013e2565b62000b83565b604051620001f8919062001bf8565b60405180910390f35b6200021f600480360381019062000219919062001c1c565b62000d53565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200031c576040517fadf438e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080865111801562000373575060008551115b801562000381575060008451115b80156200038f575060008351115b80156200039d575060008251115b620003d4576040517feaf3bd8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518251148015620003e7575083518251145b6200041e576040517f35e961c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015620005ac5760006001826200043c919062001cb1565b90505b835181101562000595578381815181106200045f576200045e62001cec565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1684838151811062000493576200049262001cec565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161480620005475750848181518110620004cf57620004ce62001cec565b5b6020026020010151604051602001620004e9919062001d5d565b6040516020818303038152906040528051906020012085838151811062000515576200051462001cec565b5b60200260200101516040516020016200052f919062001d5d565b60405160208183030381529060405280519060200120145b156200057f576040517f301cd94e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806200058c9062001d76565b9150506200043f565b508080620005a39062001d76565b91505062000421565b50604686511115620005ea576040517f35e961c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b84518110156200066757601e8582815181106200060f576200060e62001cec565b5b602002602001015151111562000651576040517f35e961c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806200065e9062001d76565b915050620005ed565b5060003387878787876040516200067e9062001240565b6200068f9695949392919062001ed2565b604051809103906000f080158015620006ac573d6000803e3d6000fd5b509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7218ecb1d60a4ca32226db62922bd3917372e8801cddba0cc86fffd285ff74428989898989604051620007b695949392919062001f62565b60405180910390a38091505095945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000835111801562000806575060008251115b6200083d576040517feaf3bd8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166399ae1ec2336040518263ffffffff1660e01b815260040162000878919062001380565b602060405180830381865afa15801562000896573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008bc91906200201f565b620008f3576040517f473da96a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166399ae1ec2826040518263ffffffff1660e01b81526004016200092e919062001380565b602060405180830381865afa1580156200094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200097291906200201f565b15620009aa576040517fbba97c9c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b601e83511115620009e7576040517f35e961c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16634919e2778484846040518463ffffffff1660e01b815260040162000a269392919062002051565b600060405180830381600087803b15801562000a4157600080fd5b505af115801562000a56573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff167fca8be768c3e2ef69996f18134c17e8f458e3149408ddf4b162cc2a4c48d871a484848460405162000aa69392919062002051565b60405180910390a250505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801562000b7757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000b2c575b50505050509050919050565b60606000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050111562000cf257600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101562000ce657838290600052602060002001805462000c5290620020cb565b80601f016020809104026020016040519081016040528092919081815260200182805462000c8090620020cb565b801562000cd15780601f1062000ca55761010080835404028352916020019162000cd1565b820191906000526020600020905b81548152906001019060200180831162000cb357829003601f168201915b50505050508152602001906001019062000c30565b50505050905062000d4e565b60008067ffffffffffffffff81111562000d115762000d1062001467565b5b60405190808252806020026020018201604052801562000d4657816020015b606081526020019060019003908162000d305790505b509050809150505b919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000dd8576040517e11415300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500362000f4157600167ffffffffffffffff81111562000e415762000e4062001467565b5b60405190808252806020026020018201604052801562000e7657816020015b606081526020019060019003908162000e605790505b50600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019062000ecb9291906200124e565b5080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154811062000f225762000f2162001cec565b5b90600052602060002001908162000f3a9190620022c8565b506200123c565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011156200123b576000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015620010a45783829060005260206000200180546200101090620020cb565b80601f01602080910402602001604051908101604052809291908181526020018280546200103e90620020cb565b80156200108f5780601f1062001063576101008083540402835291602001916200108f565b820191906000526020600020905b8154815290600101906020018083116200107157829003601f168201915b50505050508152602001906001019062000fee565b50505050905060005b8151811015620011745782604051602001620010ca919062001d5d565b60405160208183030381529060405280519060200120828281518110620010f657620010f562001cec565b5b602002602001015160405160200162001110919062001d5d565b60405160208183030381529060405280519060200120036200115e576040517ff0ed3d3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806200116b9062001d76565b915050620010ad565b50600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505060019003906000526020600020016000909190919091509081620011e89190620022c8565b508273ffffffffffffffffffffffffffffffffffffffff167fb84b5dc40da8cd280dee1aaf74b3abbd449725a972daf3ad8cbc9d0adc089eff83604051620012319190620023af565b60405180910390a2505b5b5050565b61243880620023d483390190565b8280548282559060005260206000209081019282156200129b579160200282015b828111156200129a578251829081620012899190620022c8565b50916020019190600101906200126f565b5b509050620012aa9190620012ae565b5090565b5b80821115620012d25760008181620012c89190620012d6565b50600101620012af565b5090565b508054620012e490620020cb565b6000825580601f10620012f8575062001319565b601f0160209004906000526020600020908101906200131891906200131c565b5b50565b5b80821115620013375760008160009055506001016200131d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062001368826200133b565b9050919050565b6200137a816200135b565b82525050565b60006020820190506200139760008301846200136f565b92915050565b6000604051905090565b600080fd5b600080fd5b620013bc816200135b565b8114620013c857600080fd5b50565b600081359050620013dc81620013b1565b92915050565b600060208284031215620013fb57620013fa620013a7565b5b60006200140b84828501620013cb565b91505092915050565b6000819050919050565b620014298162001414565b82525050565b60006020820190506200144660008301846200141e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620014a18262001456565b810181811067ffffffffffffffff82111715620014c357620014c262001467565b5b80604052505050565b6000620014d86200139d565b9050620014e6828262001496565b919050565b600067ffffffffffffffff82111562001509576200150862001467565b5b620015148262001456565b9050602081019050919050565b82818337600083830152505050565b6000620015476200154184620014eb565b620014cc565b90508281526020810184848401111562001566576200156562001451565b5b6200157384828562001521565b509392505050565b600082601f8301126200159357620015926200144c565b5b8135620015a584826020860162001530565b91505092915050565b600067ffffffffffffffff821115620015cc57620015cb62001467565b5b602082029050602081019050919050565b600080fd5b6000620015f9620015f384620015ae565b620014cc565b905080838252602082019050602084028301858111156200161f576200161e620015dd565b5b835b818110156200166d57803567ffffffffffffffff8111156200164857620016476200144c565b5b8086016200165789826200157b565b8552602085019450505060208101905062001621565b5050509392505050565b600082601f8301126200168f576200168e6200144c565b5b8135620016a1848260208601620015e2565b91505092915050565b600067ffffffffffffffff821115620016c857620016c762001467565b5b602082029050602081019050919050565b6000620016f0620016ea84620016aa565b620014cc565b90508083825260208201905060208402830185811115620017165762001715620015dd565b5b835b818110156200174357806200172e8882620013cb565b84526020840193505060208101905062001718565b5050509392505050565b600082601f8301126200176557620017646200144c565b5b813562001777848260208601620016d9565b91505092915050565b600080600080600060a086880312156200179f576200179e620013a7565b5b600086013567ffffffffffffffff811115620017c057620017bf620013ac565b5b620017ce888289016200157b565b955050602086013567ffffffffffffffff811115620017f257620017f1620013ac565b5b62001800888289016200157b565b945050604086013567ffffffffffffffff811115620018245762001823620013ac565b5b620018328882890162001677565b935050606086013567ffffffffffffffff811115620018565762001855620013ac565b5b620018648882890162001677565b925050608086013567ffffffffffffffff811115620018885762001887620013ac565b5b62001896888289016200174d565b9150509295509295909350565b60008060008060808587031215620018c057620018bf620013a7565b5b6000620018d087828801620013cb565b945050602085013567ffffffffffffffff811115620018f457620018f3620013ac565b5b62001902878288016200157b565b935050604085013567ffffffffffffffff811115620019265762001925620013ac565b5b62001934878288016200157b565b92505060606200194787828801620013cb565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6000620019aa620019a46200199e846200133b565b6200197f565b6200133b565b9050919050565b6000620019be8262001989565b9050919050565b6000620019d282620019b1565b9050919050565b620019e481620019c5565b82525050565b6000620019f88383620019d9565b60208301905092915050565b6000602082019050919050565b600062001a1e8262001953565b62001a2a81856200195e565b935062001a37836200196f565b8060005b8381101562001a6e57815162001a528882620019ea565b975062001a5f8362001a04565b92505060018101905062001a3b565b5085935050505092915050565b6000602082019050818103600083015262001a97818462001a11565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562001b0757808201518184015260208101905062001aea565b60008484015250505050565b600062001b208262001acb565b62001b2c818562001ad6565b935062001b3e81856020860162001ae7565b62001b498162001456565b840191505092915050565b600062001b62838362001b13565b905092915050565b6000602082019050919050565b600062001b848262001a9f565b62001b90818562001aaa565b93508360208202850162001ba48562001abb565b8060005b8581101562001be6578484038952815162001bc4858262001b54565b945062001bd18362001b6a565b925060208a0199505060018101905062001ba8565b50829750879550505050505092915050565b6000602082019050818103600083015262001c14818462001b77565b905092915050565b6000806040838503121562001c365762001c35620013a7565b5b600062001c4685828601620013cb565b925050602083013567ffffffffffffffff81111562001c6a5762001c69620013ac565b5b62001c78858286016200157b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062001cbe8262001414565b915062001ccb8362001414565b925082820190508082111562001ce65762001ce562001c82565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b600062001d338262001acb565b62001d3f818562001d1b565b935062001d5181856020860162001ae7565b80840191505092915050565b600062001d6b828462001d26565b915081905092915050565b600062001d838262001414565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001db85762001db762001c82565b5b600182019050919050565b600082825260208201905092915050565b600062001de18262001acb565b62001ded818562001dc3565b935062001dff81856020860162001ae7565b62001e0a8162001456565b840191505092915050565b600081519050919050565b6000819050602082019050919050565b62001e3b816200135b565b82525050565b600062001e4f838362001e30565b60208301905092915050565b6000602082019050919050565b600062001e758262001e15565b62001e8181856200195e565b935062001e8e8362001e20565b8060005b8381101562001ec557815162001ea9888262001e41565b975062001eb68362001e5b565b92505060018101905062001e92565b5085935050505092915050565b600060c08201905062001ee960008301896200136f565b818103602083015262001efd818862001dd4565b9050818103604083015262001f13818762001dd4565b9050818103606083015262001f29818662001b77565b9050818103608083015262001f3f818562001b77565b905081810360a083015262001f55818462001e68565b9050979650505050505050565b600060a082019050818103600083015262001f7e818862001dd4565b9050818103602083015262001f94818762001dd4565b9050818103604083015262001faa818662001b77565b9050818103606083015262001fc0818562001b77565b9050818103608083015262001fd6818462001e68565b90509695505050505050565b60008115159050919050565b62001ff98162001fe2565b81146200200557600080fd5b50565b600081519050620020198162001fee565b92915050565b600060208284031215620020385762002037620013a7565b5b6000620020488482850162002008565b91505092915050565b600060608201905081810360008301526200206d818662001dd4565b9050818103602083015262002083818562001dd4565b90506200209460408301846200136f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620020e457607f821691505b602082108103620020fa57620020f96200209c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620021647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262002125565b62002170868362002125565b95508019841693508086168417925050509392505050565b6000620021a9620021a36200219d8462001414565b6200197f565b62001414565b9050919050565b6000819050919050565b620021c58362002188565b620021dd620021d482620021b0565b84845462002132565b825550505050565b600090565b620021f4620021e5565b62002201818484620021ba565b505050565b5b8181101562002229576200221d600082620021ea565b60018101905062002207565b5050565b601f8211156200227857620022428162002100565b6200224d8462002115565b810160208510156200225d578190505b620022756200226c8562002115565b83018262002206565b50505b505050565b600082821c905092915050565b60006200229d600019846008026200227d565b1980831691505092915050565b6000620022b883836200228a565b9150826002028217905092915050565b620022d38262001acb565b67ffffffffffffffff811115620022ef57620022ee62001467565b5b620022fb8254620020cb565b620023088282856200222d565b600060209050601f8311600181146200234057600084156200232b578287015190505b620023378582620022aa565b865550620023a7565b601f198416620023508662002100565b60005b828110156200237a5784890151825560018201915060208501945060208101905062002353565b868310156200239a578489015162002396601f8916826200228a565b8355505b6001600288020188555050505b505050505050565b60006020820190508181036000830152620023cb818462001dd4565b90509291505056fe60c06040526000600460006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162002438380380620024388339818101604052810190620000529190620007a4565b3373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508460019081620000cb919062000b26565b508360029081620000dd919062000b26565b50805160008190555060005b815181101562000173576200015d8482815181106200010d576200010c62000c0d565b5b60200260200101518483815181106200012b576200012a62000c0d565b5b602002602001015184848151811062000149576200014862000c0d565b5b60200260200101516200018060201b60201c565b80806200016a9062000c6b565b915050620000e9565b5050505050505062000d45565b60a05173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001e8576040517feee85f7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff161562000230576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250905080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081620002bc919062000b26565b506020820151816001019081620002d4919062000b26565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fd76352dcc1f8336c0abdec06ee73330eee3e75ba620ba2c87510a25a32439d4e8585604051620003cc92919062000d0a565b60405180910390a250505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200041b82620003ee565b9050919050565b6200042d816200040e565b81146200043957600080fd5b50565b6000815190506200044d8162000422565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004a8826200045d565b810181811067ffffffffffffffff82111715620004ca57620004c96200046e565b5b80604052505050565b6000620004df620003da565b9050620004ed82826200049d565b919050565b600067ffffffffffffffff82111562000510576200050f6200046e565b5b6200051b826200045d565b9050602081019050919050565b60005b83811015620005485780820151818401526020810190506200052b565b60008484015250505050565b60006200056b6200056584620004f2565b620004d3565b9050828152602081018484840111156200058a576200058962000458565b5b6200059784828562000528565b509392505050565b600082601f830112620005b757620005b662000453565b5b8151620005c984826020860162000554565b91505092915050565b600067ffffffffffffffff821115620005f057620005ef6200046e565b5b602082029050602081019050919050565b600080fd5b60006200061d6200061784620005d2565b620004d3565b9050808382526020820190506020840283018581111562000643576200064262000601565b5b835b818110156200069157805167ffffffffffffffff8111156200066c576200066b62000453565b5b8086016200067b89826200059f565b8552602085019450505060208101905062000645565b5050509392505050565b600082601f830112620006b357620006b262000453565b5b8151620006c584826020860162000606565b91505092915050565b600067ffffffffffffffff821115620006ec57620006eb6200046e565b5b602082029050602081019050919050565b6000620007146200070e84620006ce565b620004d3565b905080838252602082019050602084028301858111156200073a576200073962000601565b5b835b818110156200076757806200075288826200043c565b8452602084019350506020810190506200073c565b5050509392505050565b600082601f83011262000789576200078862000453565b5b81516200079b848260208601620006fd565b91505092915050565b60008060008060008060c08789031215620007c457620007c3620003e4565b5b6000620007d489828a016200043c565b965050602087015167ffffffffffffffff811115620007f857620007f7620003e9565b5b6200080689828a016200059f565b955050604087015167ffffffffffffffff8111156200082a5762000829620003e9565b5b6200083889828a016200059f565b945050606087015167ffffffffffffffff8111156200085c576200085b620003e9565b5b6200086a89828a016200069b565b935050608087015167ffffffffffffffff8111156200088e576200088d620003e9565b5b6200089c89828a016200069b565b92505060a087015167ffffffffffffffff811115620008c057620008bf620003e9565b5b620008ce89828a0162000771565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200092e57607f821691505b602082108103620009445762000943620008e6565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620009ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200096f565b620009ba86836200096f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000a0762000a01620009fb84620009d2565b620009dc565b620009d2565b9050919050565b6000819050919050565b62000a2383620009e6565b62000a3b62000a328262000a0e565b8484546200097c565b825550505050565b600090565b62000a5262000a43565b62000a5f81848462000a18565b505050565b5b8181101562000a875762000a7b60008262000a48565b60018101905062000a65565b5050565b601f82111562000ad65762000aa0816200094a565b62000aab846200095f565b8101602085101562000abb578190505b62000ad362000aca856200095f565b83018262000a64565b50505b505050565b600082821c905092915050565b600062000afb6000198460080262000adb565b1980831691505092915050565b600062000b16838362000ae8565b9150826002028217905092915050565b62000b3182620008db565b67ffffffffffffffff81111562000b4d5762000b4c6200046e565b5b62000b59825462000915565b62000b6682828562000a8b565b600060209050601f83116001811462000b9e576000841562000b89578287015190505b62000b95858262000b08565b86555062000c05565b601f19841662000bae866200094a565b60005b8281101562000bd85784890151825560018201915060208501945060208101905062000bb1565b8683101562000bf8578489015162000bf4601f89168262000ae8565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000c7882620009d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000cad5762000cac62000c3c565b5b600182019050919050565b600082825260208201905092915050565b600062000cd682620008db565b62000ce2818562000cb8565b935062000cf481856020860162000528565b62000cff816200045d565b840191505092915050565b6000604082019050818103600083015262000d26818562000cc9565b9050818103602083015262000d3c818462000cc9565b90509392505050565b60805160a0516116c662000d72600039600081816102c101526107af01526000610a1901526116c66000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637b560fc2116100715780637b560fc21461017d578063893d20e81461018757806399ae1ec2146101a5578063ad605729146101d5578063d6781324146101f3578063ee9706ac146101fd576100b4565b806317d7de7c146100b95780634919e277146100d757806354181ded146100f357806364fb931b146101115780637143059f1461012f57806372c0c0a81461015f575b600080fd5b6100c161022d565b6040516100ce9190610e33565b60405180910390f35b6100f160048036038101906100ec9190610ffc565b6102bf565b005b6100fb61052f565b6040516101089190610e33565b60405180910390f35b6101196105c1565b60405161012691906110a2565b60405180910390f35b610149600480360381019061014491906110bd565b6105d8565b604051610156919061119a565b60405180910390f35b6101676107ab565b60405161017491906111cb565b60405180910390f35b6101856107d3565b005b61018f610a15565b60405161019c91906111cb565b60405180910390f35b6101bf60048036038101906101ba91906110bd565b610a3d565b6040516101cc91906110a2565b60405180910390f35b6101dd610ae7565b6040516101ea91906111ff565b60405180910390f35b6101fb610af0565b005b610217600480360381019061021291906110bd565b610d16565b60405161022491906110a2565b60405180910390f35b60606001805461023c90611249565b80601f016020809104026020016040519081016040528092919081815260200182805461026890611249565b80156102b55780601f1061028a576101008083540402835291602001916102b5565b820191906000526020600020905b81548152906001019060200180831161029857829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610344576040517feee85f7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff161561038b576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250905080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816104159190611426565b50602082015181600101908161042b9190611426565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fd76352dcc1f8336c0abdec06ee73330eee3e75ba620ba2c87510a25a32439d4e85856040516105219291906114f8565b60405180910390a250505050565b60606002805461053e90611249565b80601f016020809104026020016040519081016040528092919081815260200182805461056a90611249565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b5050505050905090565b6000600460009054906101000a900460ff16905090565b6105e0610d6c565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201805461063a90611249565b80601f016020809104026020016040519081016040528092919081815260200182805461066690611249565b80156106b35780601f10610688576101008083540402835291602001916106b3565b820191906000526020600020905b81548152906001019060200180831161069657829003601f168201915b505050505081526020016001820180546106cc90611249565b80601f01602080910402602001604051908101604052809291908181526020018280546106f890611249565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006107de33610a3d565b905080610817576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff161561085e576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036108e8576040517f3b4b7dcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f26c25af05520e978d353f976c99fa4c277ddc75aed4170ec47c9e24f06e62a1c600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101604051610a0a9291906115b3565b60405180910390a250565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610add5760009050610ae2565b600190505b919050565b60008054905090565b6000610afb33610a3d565b905080610b34576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff1615610b7b576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006003805480602002602001604051908101604052809291908181526020018280548015610bff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bb5575b5050505050905060005b600054811015610cca576000151560066000848481518110610c2e57610c2d6115ea565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151503610cb7576040517fadba427200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080610cc290611648565b915050610c09565b506001600460006101000a81548160ff0219169083151502179055507f77b99c173854235e0f45948e541b3d590e15d05c680efbedc9c18bcb845aa01c60405160405180910390a15050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ddd578082015181840152602081019050610dc2565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e0582610da3565b610e0f8185610dae565b9350610e1f818560208601610dbf565b610e2881610de9565b840191505092915050565b60006020820190508181036000830152610e4d8184610dfa565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610eab82610de9565b810181811067ffffffffffffffff82111715610eca57610ec9610e73565b5b80604052505050565b6000610edd610e55565b9050610ee98282610ea2565b919050565b600067ffffffffffffffff821115610f0957610f08610e73565b5b610f1282610de9565b9050602081019050919050565b82818337600083830152505050565b6000610f41610f3c84610eee565b610ed3565b905082815260208101848484011115610f5d57610f5c610e6e565b5b610f68848285610f1f565b509392505050565b600082601f830112610f8557610f84610e69565b5b8135610f95848260208601610f2e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc982610f9e565b9050919050565b610fd981610fbe565b8114610fe457600080fd5b50565b600081359050610ff681610fd0565b92915050565b60008060006060848603121561101557611014610e5f565b5b600084013567ffffffffffffffff81111561103357611032610e64565b5b61103f86828701610f70565b935050602084013567ffffffffffffffff8111156110605761105f610e64565b5b61106c86828701610f70565b925050604061107d86828701610fe7565b9150509250925092565b60008115159050919050565b61109c81611087565b82525050565b60006020820190506110b76000830184611093565b92915050565b6000602082840312156110d3576110d2610e5f565b5b60006110e184828501610fe7565b91505092915050565b600082825260208201905092915050565b600061110682610da3565b61111081856110ea565b9350611120818560208601610dbf565b61112981610de9565b840191505092915050565b61113d81610fbe565b82525050565b6000606083016000830151848203600086015261116082826110fb565b9150506020830151848203602086015261117a82826110fb565b915050604083015161118f6040860182611134565b508091505092915050565b600060208201905081810360008301526111b48184611143565b905092915050565b6111c581610fbe565b82525050565b60006020820190506111e060008301846111bc565b92915050565b6000819050919050565b6111f9816111e6565b82525050565b600060208201905061121460008301846111f0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061126157607f821691505b6020821081036112745761127361121a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112dc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261129f565b6112e6868361129f565b95508019841693508086168417925050509392505050565b6000819050919050565b600061132361131e611319846111e6565b6112fe565b6111e6565b9050919050565b6000819050919050565b61133d83611308565b6113516113498261132a565b8484546112ac565b825550505050565b600090565b611366611359565b611371818484611334565b505050565b5b818110156113955761138a60008261135e565b600181019050611377565b5050565b601f8211156113da576113ab8161127a565b6113b48461128f565b810160208510156113c3578190505b6113d76113cf8561128f565b830182611376565b50505b505050565b600082821c905092915050565b60006113fd600019846008026113df565b1980831691505092915050565b600061141683836113ec565b9150826002028217905092915050565b61142f82610da3565b67ffffffffffffffff81111561144857611447610e73565b5b6114528254611249565b61145d828285611399565b600060209050601f831160018114611490576000841561147e578287015190505b611488858261140a565b8655506114f0565b601f19841661149e8661127a565b60005b828110156114c6578489015182556001820191506020850194506020810190506114a1565b868310156114e357848901516114df601f8916826113ec565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526115128185610dfa565b905081810360208301526115268184610dfa565b90509392505050565b6000815461153c81611249565b6115468186610dae565b945060018216600081146115615760018114611577576115aa565b60ff1983168652811515602002860193506115aa565b6115808561127a565b60005b838110156115a257815481890152600182019150602081019050611583565b808801955050505b50505092915050565b600060408201905081810360008301526115cd818561152f565b905081810360208301526115e1818461152f565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611653826111e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361168557611684611619565b5b60018201905091905056fea2646970667358221220110946449f0def2f858fb19ddfe7cb3aca65048a664de0b4cec267f8c0d8faf864736f6c63430008100033a2646970667358221220543f41840903ddc0e15ac0633b7389c63a79d2a779e255132614e55960c8dec864736f6c63430008100033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000a05760003560e01c8063893d20e8116200006f578063893d20e81462000153578063c4fd18641462000175578063d210fee31462000195578063d488f9a014620001cb578063e31db573146200020157620000a0565b806346657fe914620000a55780634784336f14620000c75780635437988d14620000fd57806386605062146200011d575b600080fd5b620000af62000221565b604051620000be919062001380565b60405180910390f35b620000e56004803603810190620000df9190620013e2565b6200024a565b604051620000f491906200142f565b60405180910390f35b6200011b6004803603810190620001159190620013e2565b62000296565b005b6200013b600480360381019062000135919062001780565b6200035f565b6040516200014a919062001380565b60405180910390f35b6200015d620007cb565b6040516200016c919062001380565b60405180910390f35b6200019360048036038101906200018d9190620018a3565b620007f3565b005b620001b36004803603810190620001ad9190620013e2565b62000ab4565b604051620001c2919062001a7b565b60405180910390f35b620001e96004803603810190620001e39190620013e2565b62000b83565b604051620001f8919062001bf8565b60405180910390f35b6200021f600480360381019062000219919062001c1c565b62000d53565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200031c576040517fadf438e600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080865111801562000373575060008551115b801562000381575060008451115b80156200038f575060008351115b80156200039d575060008251115b620003d4576040517feaf3bd8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82518251148015620003e7575083518251145b6200041e576040517f35e961c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8251811015620005ac5760006001826200043c919062001cb1565b90505b835181101562000595578381815181106200045f576200045e62001cec565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1684838151811062000493576200049262001cec565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161480620005475750848181518110620004cf57620004ce62001cec565b5b6020026020010151604051602001620004e9919062001d5d565b6040516020818303038152906040528051906020012085838151811062000515576200051462001cec565b5b60200260200101516040516020016200052f919062001d5d565b60405160208183030381529060405280519060200120145b156200057f576040517f301cd94e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806200058c9062001d76565b9150506200043f565b508080620005a39062001d76565b91505062000421565b50604686511115620005ea576040517f35e961c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b84518110156200066757601e8582815181106200060f576200060e62001cec565b5b602002602001015151111562000651576040517f35e961c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806200065e9062001d76565b915050620005ed565b5060003387878787876040516200067e9062001240565b6200068f9695949392919062001ed2565b604051809103906000f080158015620006ac573d6000803e3d6000fd5b509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f7218ecb1d60a4ca32226db62922bd3917372e8801cddba0cc86fffd285ff74428989898989604051620007b695949392919062001f62565b60405180910390a38091505095945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000835111801562000806575060008251115b6200083d576040517feaf3bd8900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166399ae1ec2336040518263ffffffff1660e01b815260040162000878919062001380565b602060405180830381865afa15801562000896573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008bc91906200201f565b620008f3576040517f473da96a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff166399ae1ec2826040518263ffffffff1660e01b81526004016200092e919062001380565b602060405180830381865afa1580156200094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200097291906200201f565b15620009aa576040517fbba97c9c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b601e83511115620009e7576040517f35e961c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16634919e2778484846040518463ffffffff1660e01b815260040162000a269392919062002051565b600060405180830381600087803b15801562000a4157600080fd5b505af115801562000a56573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff167fca8be768c3e2ef69996f18134c17e8f458e3149408ddf4b162cc2a4c48d871a484848460405162000aa69392919062002051565b60405180910390a250505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801562000b7757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831162000b2c575b50505050509050919050565b60606000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050111562000cf257600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101562000ce657838290600052602060002001805462000c5290620020cb565b80601f016020809104026020016040519081016040528092919081815260200182805462000c8090620020cb565b801562000cd15780601f1062000ca55761010080835404028352916020019162000cd1565b820191906000526020600020905b81548152906001019060200180831162000cb357829003601f168201915b50505050508152602001906001019062000c30565b50505050905062000d4e565b60008067ffffffffffffffff81111562000d115762000d1062001467565b5b60405190808252806020026020018201604052801562000d4657816020015b606081526020019060019003908162000d305790505b509050809150505b919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000dd8576040517e11415300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490500362000f4157600167ffffffffffffffff81111562000e415762000e4062001467565b5b60405190808252806020026020018201604052801562000e7657816020015b606081526020019060019003908162000e605790505b50600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019062000ecb9291906200124e565b5080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154811062000f225762000f2162001cec565b5b90600052602060002001908162000f3a9190620022c8565b506200123c565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905011156200123b576000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015620010a45783829060005260206000200180546200101090620020cb565b80601f01602080910402602001604051908101604052809291908181526020018280546200103e90620020cb565b80156200108f5780601f1062001063576101008083540402835291602001916200108f565b820191906000526020600020905b8154815290600101906020018083116200107157829003601f168201915b50505050508152602001906001019062000fee565b50505050905060005b8151811015620011745782604051602001620010ca919062001d5d565b60405160208183030381529060405280519060200120828281518110620010f657620010f562001cec565b5b602002602001015160405160200162001110919062001d5d565b60405160208183030381529060405280519060200120036200115e576040517ff0ed3d3000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80806200116b9062001d76565b915050620010ad565b50600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082908060018154018082558091505060019003906000526020600020016000909190919091509081620011e89190620022c8565b508273ffffffffffffffffffffffffffffffffffffffff167fb84b5dc40da8cd280dee1aaf74b3abbd449725a972daf3ad8cbc9d0adc089eff83604051620012319190620023af565b60405180910390a2505b5b5050565b61243880620023d483390190565b8280548282559060005260206000209081019282156200129b579160200282015b828111156200129a578251829081620012899190620022c8565b50916020019190600101906200126f565b5b509050620012aa9190620012ae565b5090565b5b80821115620012d25760008181620012c89190620012d6565b50600101620012af565b5090565b508054620012e490620020cb565b6000825580601f10620012f8575062001319565b601f0160209004906000526020600020908101906200131891906200131c565b5b50565b5b80821115620013375760008160009055506001016200131d565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062001368826200133b565b9050919050565b6200137a816200135b565b82525050565b60006020820190506200139760008301846200136f565b92915050565b6000604051905090565b600080fd5b600080fd5b620013bc816200135b565b8114620013c857600080fd5b50565b600081359050620013dc81620013b1565b92915050565b600060208284031215620013fb57620013fa620013a7565b5b60006200140b84828501620013cb565b91505092915050565b6000819050919050565b620014298162001414565b82525050565b60006020820190506200144660008301846200141e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620014a18262001456565b810181811067ffffffffffffffff82111715620014c357620014c262001467565b5b80604052505050565b6000620014d86200139d565b9050620014e6828262001496565b919050565b600067ffffffffffffffff82111562001509576200150862001467565b5b620015148262001456565b9050602081019050919050565b82818337600083830152505050565b6000620015476200154184620014eb565b620014cc565b90508281526020810184848401111562001566576200156562001451565b5b6200157384828562001521565b509392505050565b600082601f8301126200159357620015926200144c565b5b8135620015a584826020860162001530565b91505092915050565b600067ffffffffffffffff821115620015cc57620015cb62001467565b5b602082029050602081019050919050565b600080fd5b6000620015f9620015f384620015ae565b620014cc565b905080838252602082019050602084028301858111156200161f576200161e620015dd565b5b835b818110156200166d57803567ffffffffffffffff8111156200164857620016476200144c565b5b8086016200165789826200157b565b8552602085019450505060208101905062001621565b5050509392505050565b600082601f8301126200168f576200168e6200144c565b5b8135620016a1848260208601620015e2565b91505092915050565b600067ffffffffffffffff821115620016c857620016c762001467565b5b602082029050602081019050919050565b6000620016f0620016ea84620016aa565b620014cc565b90508083825260208201905060208402830185811115620017165762001715620015dd565b5b835b818110156200174357806200172e8882620013cb565b84526020840193505060208101905062001718565b5050509392505050565b600082601f8301126200176557620017646200144c565b5b813562001777848260208601620016d9565b91505092915050565b600080600080600060a086880312156200179f576200179e620013a7565b5b600086013567ffffffffffffffff811115620017c057620017bf620013ac565b5b620017ce888289016200157b565b955050602086013567ffffffffffffffff811115620017f257620017f1620013ac565b5b62001800888289016200157b565b945050604086013567ffffffffffffffff811115620018245762001823620013ac565b5b620018328882890162001677565b935050606086013567ffffffffffffffff811115620018565762001855620013ac565b5b620018648882890162001677565b925050608086013567ffffffffffffffff811115620018885762001887620013ac565b5b62001896888289016200174d565b9150509295509295909350565b60008060008060808587031215620018c057620018bf620013a7565b5b6000620018d087828801620013cb565b945050602085013567ffffffffffffffff811115620018f457620018f3620013ac565b5b62001902878288016200157b565b935050604085013567ffffffffffffffff811115620019265762001925620013ac565b5b62001934878288016200157b565b92505060606200194787828801620013cb565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6000620019aa620019a46200199e846200133b565b6200197f565b6200133b565b9050919050565b6000620019be8262001989565b9050919050565b6000620019d282620019b1565b9050919050565b620019e481620019c5565b82525050565b6000620019f88383620019d9565b60208301905092915050565b6000602082019050919050565b600062001a1e8262001953565b62001a2a81856200195e565b935062001a37836200196f565b8060005b8381101562001a6e57815162001a528882620019ea565b975062001a5f8362001a04565b92505060018101905062001a3b565b5085935050505092915050565b6000602082019050818103600083015262001a97818462001a11565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101562001b0757808201518184015260208101905062001aea565b60008484015250505050565b600062001b208262001acb565b62001b2c818562001ad6565b935062001b3e81856020860162001ae7565b62001b498162001456565b840191505092915050565b600062001b62838362001b13565b905092915050565b6000602082019050919050565b600062001b848262001a9f565b62001b90818562001aaa565b93508360208202850162001ba48562001abb565b8060005b8581101562001be6578484038952815162001bc4858262001b54565b945062001bd18362001b6a565b925060208a0199505060018101905062001ba8565b50829750879550505050505092915050565b6000602082019050818103600083015262001c14818462001b77565b905092915050565b6000806040838503121562001c365762001c35620013a7565b5b600062001c4685828601620013cb565b925050602083013567ffffffffffffffff81111562001c6a5762001c69620013ac565b5b62001c78858286016200157b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062001cbe8262001414565b915062001ccb8362001414565b925082820190508082111562001ce65762001ce562001c82565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b600062001d338262001acb565b62001d3f818562001d1b565b935062001d5181856020860162001ae7565b80840191505092915050565b600062001d6b828462001d26565b915081905092915050565b600062001d838262001414565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362001db85762001db762001c82565b5b600182019050919050565b600082825260208201905092915050565b600062001de18262001acb565b62001ded818562001dc3565b935062001dff81856020860162001ae7565b62001e0a8162001456565b840191505092915050565b600081519050919050565b6000819050602082019050919050565b62001e3b816200135b565b82525050565b600062001e4f838362001e30565b60208301905092915050565b6000602082019050919050565b600062001e758262001e15565b62001e8181856200195e565b935062001e8e8362001e20565b8060005b8381101562001ec557815162001ea9888262001e41565b975062001eb68362001e5b565b92505060018101905062001e92565b5085935050505092915050565b600060c08201905062001ee960008301896200136f565b818103602083015262001efd818862001dd4565b9050818103604083015262001f13818762001dd4565b9050818103606083015262001f29818662001b77565b9050818103608083015262001f3f818562001b77565b905081810360a083015262001f55818462001e68565b9050979650505050505050565b600060a082019050818103600083015262001f7e818862001dd4565b9050818103602083015262001f94818762001dd4565b9050818103604083015262001faa818662001b77565b9050818103606083015262001fc0818562001b77565b9050818103608083015262001fd6818462001e68565b90509695505050505050565b60008115159050919050565b62001ff98162001fe2565b81146200200557600080fd5b50565b600081519050620020198162001fee565b92915050565b600060208284031215620020385762002037620013a7565b5b6000620020488482850162002008565b91505092915050565b600060608201905081810360008301526200206d818662001dd4565b9050818103602083015262002083818562001dd4565b90506200209460408301846200136f565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620020e457607f821691505b602082108103620020fa57620020f96200209c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620021647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262002125565b62002170868362002125565b95508019841693508086168417925050509392505050565b6000620021a9620021a36200219d8462001414565b6200197f565b62001414565b9050919050565b6000819050919050565b620021c58362002188565b620021dd620021d482620021b0565b84845462002132565b825550505050565b600090565b620021f4620021e5565b62002201818484620021ba565b505050565b5b8181101562002229576200221d600082620021ea565b60018101905062002207565b5050565b601f8211156200227857620022428162002100565b6200224d8462002115565b810160208510156200225d578190505b620022756200226c8562002115565b83018262002206565b50505b505050565b600082821c905092915050565b60006200229d600019846008026200227d565b1980831691505092915050565b6000620022b883836200228a565b9150826002028217905092915050565b620022d38262001acb565b67ffffffffffffffff811115620022ef57620022ee62001467565b5b620022fb8254620020cb565b620023088282856200222d565b600060209050601f8311600181146200234057600084156200232b578287015190505b620023378582620022aa565b865550620023a7565b601f198416620023508662002100565b60005b828110156200237a5784890151825560018201915060208501945060208101905062002353565b868310156200239a578489015162002396601f8916826200228a565b8355505b6001600288020188555050505b505050505050565b60006020820190508181036000830152620023cb818462001dd4565b90509291505056fe60c06040526000600460006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162002438380380620024388339818101604052810190620000529190620007a4565b3373ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508573ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508460019081620000cb919062000b26565b508360029081620000dd919062000b26565b50805160008190555060005b815181101562000173576200015d8482815181106200010d576200010c62000c0d565b5b60200260200101518483815181106200012b576200012a62000c0d565b5b602002602001015184848151811062000149576200014862000c0d565b5b60200260200101516200018060201b60201c565b80806200016a9062000c6b565b915050620000e9565b5050505050505062000d45565b60a05173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001e8576040517feee85f7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff161562000230576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250905080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081620002bc919062000b26565b506020820151816001019081620002d4919062000b26565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fd76352dcc1f8336c0abdec06ee73330eee3e75ba620ba2c87510a25a32439d4e8585604051620003cc92919062000d0a565b60405180910390a250505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200041b82620003ee565b9050919050565b6200042d816200040e565b81146200043957600080fd5b50565b6000815190506200044d8162000422565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620004a8826200045d565b810181811067ffffffffffffffff82111715620004ca57620004c96200046e565b5b80604052505050565b6000620004df620003da565b9050620004ed82826200049d565b919050565b600067ffffffffffffffff82111562000510576200050f6200046e565b5b6200051b826200045d565b9050602081019050919050565b60005b83811015620005485780820151818401526020810190506200052b565b60008484015250505050565b60006200056b6200056584620004f2565b620004d3565b9050828152602081018484840111156200058a576200058962000458565b5b6200059784828562000528565b509392505050565b600082601f830112620005b757620005b662000453565b5b8151620005c984826020860162000554565b91505092915050565b600067ffffffffffffffff821115620005f057620005ef6200046e565b5b602082029050602081019050919050565b600080fd5b60006200061d6200061784620005d2565b620004d3565b9050808382526020820190506020840283018581111562000643576200064262000601565b5b835b818110156200069157805167ffffffffffffffff8111156200066c576200066b62000453565b5b8086016200067b89826200059f565b8552602085019450505060208101905062000645565b5050509392505050565b600082601f830112620006b357620006b262000453565b5b8151620006c584826020860162000606565b91505092915050565b600067ffffffffffffffff821115620006ec57620006eb6200046e565b5b602082029050602081019050919050565b6000620007146200070e84620006ce565b620004d3565b905080838252602082019050602084028301858111156200073a576200073962000601565b5b835b818110156200076757806200075288826200043c565b8452602084019350506020810190506200073c565b5050509392505050565b600082601f83011262000789576200078862000453565b5b81516200079b848260208601620006fd565b91505092915050565b60008060008060008060c08789031215620007c457620007c3620003e4565b5b6000620007d489828a016200043c565b965050602087015167ffffffffffffffff811115620007f857620007f7620003e9565b5b6200080689828a016200059f565b955050604087015167ffffffffffffffff8111156200082a5762000829620003e9565b5b6200083889828a016200059f565b945050606087015167ffffffffffffffff8111156200085c576200085b620003e9565b5b6200086a89828a016200069b565b935050608087015167ffffffffffffffff8111156200088e576200088d620003e9565b5b6200089c89828a016200069b565b92505060a087015167ffffffffffffffff811115620008c057620008bf620003e9565b5b620008ce89828a0162000771565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200092e57607f821691505b602082108103620009445762000943620008e6565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620009ae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200096f565b620009ba86836200096f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000a0762000a01620009fb84620009d2565b620009dc565b620009d2565b9050919050565b6000819050919050565b62000a2383620009e6565b62000a3b62000a328262000a0e565b8484546200097c565b825550505050565b600090565b62000a5262000a43565b62000a5f81848462000a18565b505050565b5b8181101562000a875762000a7b60008262000a48565b60018101905062000a65565b5050565b601f82111562000ad65762000aa0816200094a565b62000aab846200095f565b8101602085101562000abb578190505b62000ad362000aca856200095f565b83018262000a64565b50505b505050565b600082821c905092915050565b600062000afb6000198460080262000adb565b1980831691505092915050565b600062000b16838362000ae8565b9150826002028217905092915050565b62000b3182620008db565b67ffffffffffffffff81111562000b4d5762000b4c6200046e565b5b62000b59825462000915565b62000b6682828562000a8b565b600060209050601f83116001811462000b9e576000841562000b89578287015190505b62000b95858262000b08565b86555062000c05565b601f19841662000bae866200094a565b60005b8281101562000bd85784890151825560018201915060208501945060208101905062000bb1565b8683101562000bf8578489015162000bf4601f89168262000ae8565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000c7882620009d2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820362000cad5762000cac62000c3c565b5b600182019050919050565b600082825260208201905092915050565b600062000cd682620008db565b62000ce2818562000cb8565b935062000cf481856020860162000528565b62000cff816200045d565b840191505092915050565b6000604082019050818103600083015262000d26818562000cc9565b9050818103602083015262000d3c818462000cc9565b90509392505050565b60805160a0516116c662000d72600039600081816102c101526107af01526000610a1901526116c66000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637b560fc2116100715780637b560fc21461017d578063893d20e81461018757806399ae1ec2146101a5578063ad605729146101d5578063d6781324146101f3578063ee9706ac146101fd576100b4565b806317d7de7c146100b95780634919e277146100d757806354181ded146100f357806364fb931b146101115780637143059f1461012f57806372c0c0a81461015f575b600080fd5b6100c161022d565b6040516100ce9190610e33565b60405180910390f35b6100f160048036038101906100ec9190610ffc565b6102bf565b005b6100fb61052f565b6040516101089190610e33565b60405180910390f35b6101196105c1565b60405161012691906110a2565b60405180910390f35b610149600480360381019061014491906110bd565b6105d8565b604051610156919061119a565b60405180910390f35b6101676107ab565b60405161017491906111cb565b60405180910390f35b6101856107d3565b005b61018f610a15565b60405161019c91906111cb565b60405180910390f35b6101bf60048036038101906101ba91906110bd565b610a3d565b6040516101cc91906110a2565b60405180910390f35b6101dd610ae7565b6040516101ea91906111ff565b60405180910390f35b6101fb610af0565b005b610217600480360381019061021291906110bd565b610d16565b60405161022491906110a2565b60405180910390f35b60606001805461023c90611249565b80601f016020809104026020016040519081016040528092919081815260200182805461026890611249565b80156102b55780601f1061028a576101008083540402835291602001916102b5565b820191906000526020600020905b81548152906001019060200180831161029857829003601f168201915b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610344576040517feee85f7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff161561038b576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060405180606001604052808581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250905080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816104159190611426565b50602082015181600101908161042b9190611426565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506003829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167fd76352dcc1f8336c0abdec06ee73330eee3e75ba620ba2c87510a25a32439d4e85856040516105219291906114f8565b60405180910390a250505050565b60606002805461053e90611249565b80601f016020809104026020016040519081016040528092919081815260200182805461056a90611249565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b5050505050905090565b6000600460009054906101000a900460ff16905090565b6105e0610d6c565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201805461063a90611249565b80601f016020809104026020016040519081016040528092919081815260200182805461066690611249565b80156106b35780601f10610688576101008083540402835291602001916106b3565b820191906000526020600020905b81548152906001019060200180831161069657829003601f168201915b505050505081526020016001820180546106cc90611249565b80601f01602080910402602001604051908101604052809291908181526020018280546106f890611249565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b505050505081526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006107de33610a3d565b905080610817576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff161561085e576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60011515600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515036108e8576040517f3b4b7dcf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f26c25af05520e978d353f976c99fa4c277ddc75aed4170ec47c9e24f06e62a1c600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101604051610a0a9291906115b3565b60405180910390a250565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610add5760009050610ae2565b600190505b919050565b60008054905090565b6000610afb33610a3d565b905080610b34576040517ffccacf3300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460009054906101000a900460ff1615610b7b576040517f6bbe2df800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006003805480602002602001604051908101604052809291908181526020018280548015610bff57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bb5575b5050505050905060005b600054811015610cca576000151560066000848481518110610c2e57610c2d6115ea565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151503610cb7576040517fadba427200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080610cc290611648565b915050610c09565b506001600460006101000a81548160ff0219169083151502179055507f77b99c173854235e0f45948e541b3d590e15d05c680efbedc9c18bcb845aa01c60405160405180910390a15050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60405180606001604052806060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ddd578082015181840152602081019050610dc2565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e0582610da3565b610e0f8185610dae565b9350610e1f818560208601610dbf565b610e2881610de9565b840191505092915050565b60006020820190508181036000830152610e4d8184610dfa565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610eab82610de9565b810181811067ffffffffffffffff82111715610eca57610ec9610e73565b5b80604052505050565b6000610edd610e55565b9050610ee98282610ea2565b919050565b600067ffffffffffffffff821115610f0957610f08610e73565b5b610f1282610de9565b9050602081019050919050565b82818337600083830152505050565b6000610f41610f3c84610eee565b610ed3565b905082815260208101848484011115610f5d57610f5c610e6e565b5b610f68848285610f1f565b509392505050565b600082601f830112610f8557610f84610e69565b5b8135610f95848260208601610f2e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc982610f9e565b9050919050565b610fd981610fbe565b8114610fe457600080fd5b50565b600081359050610ff681610fd0565b92915050565b60008060006060848603121561101557611014610e5f565b5b600084013567ffffffffffffffff81111561103357611032610e64565b5b61103f86828701610f70565b935050602084013567ffffffffffffffff8111156110605761105f610e64565b5b61106c86828701610f70565b925050604061107d86828701610fe7565b9150509250925092565b60008115159050919050565b61109c81611087565b82525050565b60006020820190506110b76000830184611093565b92915050565b6000602082840312156110d3576110d2610e5f565b5b60006110e184828501610fe7565b91505092915050565b600082825260208201905092915050565b600061110682610da3565b61111081856110ea565b9350611120818560208601610dbf565b61112981610de9565b840191505092915050565b61113d81610fbe565b82525050565b6000606083016000830151848203600086015261116082826110fb565b9150506020830151848203602086015261117a82826110fb565b915050604083015161118f6040860182611134565b508091505092915050565b600060208201905081810360008301526111b48184611143565b905092915050565b6111c581610fbe565b82525050565b60006020820190506111e060008301846111bc565b92915050565b6000819050919050565b6111f9816111e6565b82525050565b600060208201905061121460008301846111f0565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061126157607f821691505b6020821081036112745761127361121a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112dc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261129f565b6112e6868361129f565b95508019841693508086168417925050509392505050565b6000819050919050565b600061132361131e611319846111e6565b6112fe565b6111e6565b9050919050565b6000819050919050565b61133d83611308565b6113516113498261132a565b8484546112ac565b825550505050565b600090565b611366611359565b611371818484611334565b505050565b5b818110156113955761138a60008261135e565b600181019050611377565b5050565b601f8211156113da576113ab8161127a565b6113b48461128f565b810160208510156113c3578190505b6113d76113cf8561128f565b830182611376565b50505b505050565b600082821c905092915050565b60006113fd600019846008026113df565b1980831691505092915050565b600061141683836113ec565b9150826002028217905092915050565b61142f82610da3565b67ffffffffffffffff81111561144857611447610e73565b5b6114528254611249565b61145d828285611399565b600060209050601f831160018114611490576000841561147e578287015190505b611488858261140a565b8655506114f0565b601f19841661149e8661127a565b60005b828110156114c6578489015182556001820191506020850194506020810190506114a1565b868310156114e357848901516114df601f8916826113ec565b8355505b6001600288020188555050505b505050505050565b600060408201905081810360008301526115128185610dfa565b905081810360208301526115268184610dfa565b90509392505050565b6000815461153c81611249565b6115468186610dae565b945060018216600081146115615760018114611577576115aa565b60ff1983168652811515602002860193506115aa565b6115808561127a565b60005b838110156115a257815481890152600182019150602081019050611583565b808801955050505b50505092915050565b600060408201905081810360008301526115cd818561152f565b905081810360208301526115e1818461152f565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611653826111e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361168557611684611619565b5b60018201905091905056fea2646970667358221220110946449f0def2f858fb19ddfe7cb3aca65048a664de0b4cec267f8c0d8faf864736f6c63430008100033a2646970667358221220543f41840903ddc0e15ac0633b7389c63a79d2a779e255132614e55960c8dec864736f6c63430008100033",
  "devdoc": {
    "author": "polarzero",
    "kind": "dev",
    "methods": {
      "addParticipant(address,string,string,address)": {
        "details": "Only a participant of the contract can call this functionIt can only be called if the contract is not locked (the child contract takes care of that)",
        "params": {
          "_partyAddress": "The address of the party",
          "_partyName": "The name of the party",
          "_partyTwitterHandle": "The Twitter handle of the party",
          "_promiseContractAddress": "The address of the promise contract"
        }
      },
      "addTwitterVerifiedUser(address,string)": {
        "details": "Only the verifier contract can call this function, after the account has been verified with the Chainlink Node + External Adapter",
        "params": {
          "_twitterHandle": "The Twitter handle of the verified account",
          "_userAddress": "The address of the user"
        }
      },
      "createPromiseContract(string,string,string[],string[],address[])": {
        "params": {
          "_ipfsCid": "The CID of the directory stored on IPFS",
          "_partyAddresses": "The addresses specified by the user that will be allowed to interact with the contract",
          "_partyNames": "The names of the parties specified by the user",
          "_partyTwitterHandles": "The Twitter handles of the parties specified by the user",
          "_promiseName": "The name of the contract specified by the user"
        }
      }
    },
    "title": "Master Contract",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "PromiseFactory__EMPTY_FIELD()": [
        {
          "notice": "Errors"
        }
      ]
    },
    "events": {
      "PromiseContractCreated(address,address,string,string,string[],string[],address[])": {
        "notice": "Events"
      }
    },
    "kind": "user",
    "methods": {
      "addParticipant(address,string,string,address)": {
        "notice": "Add a participant to a promise contract"
      },
      "addTwitterVerifiedUser(address,string)": {
        "notice": "Add a verified Twitter account to the list of verified accounts"
      },
      "constructor": {
        "notice": "Initialize the contract"
      },
      "createPromiseContract(string,string,string[],string[],address[])": {
        "notice": "Create a new contract and add it to the list of child contracts"
      },
      "getPromiseContractAddresses(address)": {
        "notice": "Getters"
      },
      "setVerifier(address)": {
        "notice": "Setters"
      }
    },
    "notice": "This is the master contract initializing & referencing all child contracts",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 426,
        "contract": "contracts/PromiseFactory.sol:PromiseFactory",
        "label": "s_verifier",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 432,
        "contract": "contracts/PromiseFactory.sol:PromiseFactory",
        "label": "s_promiseContracts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_array(t_contract(PromiseContract)400)dyn_storage)"
      },
      {
        "astId": 437,
        "contract": "contracts/PromiseFactory.sol:PromiseFactory",
        "label": "s_twitterVerifiedUsers",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_string_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(PromiseContract)400)dyn_storage": {
        "base": "t_contract(PromiseContract)400",
        "encoding": "dynamic_array",
        "label": "contract PromiseContract[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_contract(PromiseContract)400": {
        "encoding": "inplace",
        "label": "contract PromiseContract",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_contract(PromiseContract)400)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract PromiseContract[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(PromiseContract)400)dyn_storage"
      },
      "t_mapping(t_address,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}